<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_para_scripting_scene_8cpp" kind="file" language="C++">
    <compoundname>ParaScriptingScene.cpp</compoundname>
    <includes local="yes">ParaEngine.h</includes>
    <includes local="yes">ParaWorldAsset.h</includes>
    <includes local="yes">ViewportManager.h</includes>
    <includes local="yes">AttributesManager.h</includes>
    <includes local="yes">CanvasCamera.h</includes>
    <includes local="yes">IParaEngineApp.h</includes>
    <includes local="yes">TerrainTile.h</includes>
    <includes local="yes">AutoCamera.h</includes>
    <includes local="yes">SceneObject.h</includes>
    <includes local="yes">BipedObject.h</includes>
    <includes local="yes">SceneObjectPicking.h</includes>
    <includes local="yes">MeshObject.h</includes>
    <includes local="yes">MissileObject.h</includes>
    <includes local="yes">SphereObject.h</includes>
    <includes local="yes">SkyMesh.h</includes>
    <includes local="yes">MeshPhysicsObject.h</includes>
    <includes local="yes">IEnvironmentSim.h</includes>
    <includes local="yes">IGameObject.h</includes>
    <includes local="yes">2dengine/GUIRoot.h</includes>
    <includes local="yes">OceanManager.h</includes>
    <includes local="yes">EventsCenter.h</includes>
    <includes local="yes">terrain/GlobalTerrain.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">stdint.h</includes>
    <includes local="yes">IAttributeFields.h</includes>
    <includes local="yes">IObjectScriptingInterface.h</includes>
    <includes local="yes">TerrainTileRoot.h</includes>
    <includes local="yes">ShapeAABB.h</includes>
    <includes local="yes">ShapeOBB.h</includes>
    <includes local="yes">MiniSceneGraph.h</includes>
    <includes local="yes">ParaXModel/BoneAnimProvider.h</includes>
    <includes local="yes">CustomCharSettings.h</includes>
    <includes refid="_para_scripting_scene_8h" local="yes">ParaScriptingScene.h</includes>
    <includes local="yes">ZoneNode.h</includes>
    <includes local="yes">SunLight.h</includes>
    <includes local="yes">PortalNode.h</includes>
    <includes local="yes">SelectionManager.h</includes>
    <includes local="yes">ParaXAnimInstance.h</includes>
    <includes local="no">time.h</includes>
    <includes local="yes">lua.h</includes>
    <includes local="no">luabind/luabind.hpp</includes>
    <includes local="no">luabind/object.hpp</includes>
    <includes local="yes">memdebug.h</includes>
    <incdepgraph>
      <node id="754">
        <label>terrain/GlobalTerrain.h</label>
      </node>
      <node id="741">
        <label>SceneObject.h</label>
      </node>
      <node id="750">
        <label>IGameObject.h</label>
      </node>
      <node id="774">
        <label>PortalNode.h</label>
      </node>
      <node id="747">
        <label>SkyMesh.h</label>
      </node>
      <node id="775">
        <label>SelectionManager.h</label>
      </node>
      <node id="778">
        <label>lua.h</label>
      </node>
      <node id="756">
        <label>stdint.h</label>
      </node>
      <node id="757">
        <label>IAttributeFields.h</label>
      </node>
      <node id="739">
        <label>TerrainTile.h</label>
      </node>
      <node id="771">
        <label>ParaScriptingCharacter.h</label>
        <link refid="_para_scripting_character_8h_source"/>
        <childnode refid="766" relation="include">
        </childnode>
        <childnode refid="767" relation="include">
        </childnode>
        <childnode refid="742" relation="include">
        </childnode>
      </node>
      <node id="761">
        <label>ShapeOBB.h</label>
      </node>
      <node id="733">
        <label>ParaEngine.h</label>
      </node>
      <node id="770">
        <label>string</label>
      </node>
      <node id="738">
        <label>IParaEngineApp.h</label>
      </node>
      <node id="753">
        <label>EventsCenter.h</label>
      </node>
      <node id="758">
        <label>IObjectScriptingInterface.h</label>
      </node>
      <node id="762">
        <label>MiniSceneGraph.h</label>
      </node>
      <node id="732">
        <label>ParaScriptBindings/ParaScriptingScene.cpp</label>
        <link refid="_para_scripting_scene_8cpp"/>
        <childnode refid="733" relation="include">
        </childnode>
        <childnode refid="734" relation="include">
        </childnode>
        <childnode refid="735" relation="include">
        </childnode>
        <childnode refid="736" relation="include">
        </childnode>
        <childnode refid="737" relation="include">
        </childnode>
        <childnode refid="738" relation="include">
        </childnode>
        <childnode refid="739" relation="include">
        </childnode>
        <childnode refid="740" relation="include">
        </childnode>
        <childnode refid="741" relation="include">
        </childnode>
        <childnode refid="742" relation="include">
        </childnode>
        <childnode refid="743" relation="include">
        </childnode>
        <childnode refid="744" relation="include">
        </childnode>
        <childnode refid="745" relation="include">
        </childnode>
        <childnode refid="746" relation="include">
        </childnode>
        <childnode refid="747" relation="include">
        </childnode>
        <childnode refid="748" relation="include">
        </childnode>
        <childnode refid="749" relation="include">
        </childnode>
        <childnode refid="750" relation="include">
        </childnode>
        <childnode refid="751" relation="include">
        </childnode>
        <childnode refid="752" relation="include">
        </childnode>
        <childnode refid="753" relation="include">
        </childnode>
        <childnode refid="754" relation="include">
        </childnode>
        <childnode refid="755" relation="include">
        </childnode>
        <childnode refid="756" relation="include">
        </childnode>
        <childnode refid="757" relation="include">
        </childnode>
        <childnode refid="758" relation="include">
        </childnode>
        <childnode refid="759" relation="include">
        </childnode>
        <childnode refid="760" relation="include">
        </childnode>
        <childnode refid="761" relation="include">
        </childnode>
        <childnode refid="762" relation="include">
        </childnode>
        <childnode refid="763" relation="include">
        </childnode>
        <childnode refid="764" relation="include">
        </childnode>
        <childnode refid="765" relation="include">
        </childnode>
        <childnode refid="772" relation="include">
        </childnode>
        <childnode refid="773" relation="include">
        </childnode>
        <childnode refid="774" relation="include">
        </childnode>
        <childnode refid="775" relation="include">
        </childnode>
        <childnode refid="776" relation="include">
        </childnode>
        <childnode refid="777" relation="include">
        </childnode>
        <childnode refid="778" relation="include">
        </childnode>
        <childnode refid="779" relation="include">
        </childnode>
        <childnode refid="780" relation="include">
        </childnode>
        <childnode refid="781" relation="include">
        </childnode>
      </node>
      <node id="773">
        <label>SunLight.h</label>
      </node>
      <node id="769">
        <label>map</label>
      </node>
      <node id="736">
        <label>AttributesManager.h</label>
      </node>
      <node id="760">
        <label>ShapeAABB.h</label>
      </node>
      <node id="740">
        <label>AutoCamera.h</label>
      </node>
      <node id="759">
        <label>TerrainTileRoot.h</label>
      </node>
      <node id="743">
        <label>SceneObjectPicking.h</label>
      </node>
      <node id="745">
        <label>MissileObject.h</label>
      </node>
      <node id="780">
        <label>luabind/object.hpp</label>
      </node>
      <node id="748">
        <label>MeshPhysicsObject.h</label>
      </node>
      <node id="744">
        <label>MeshObject.h</label>
      </node>
      <node id="767">
        <label>ParaScriptingGlobal.h</label>
        <link refid="_para_scripting_global_8h_source"/>
        <childnode refid="768" relation="include">
        </childnode>
        <childnode refid="757" relation="include">
        </childnode>
        <childnode refid="769" relation="include">
        </childnode>
        <childnode refid="770" relation="include">
        </childnode>
      </node>
      <node id="779">
        <label>luabind/luabind.hpp</label>
      </node>
      <node id="781">
        <label>memdebug.h</label>
      </node>
      <node id="751">
        <label>2dengine/GUIRoot.h</label>
      </node>
      <node id="752">
        <label>OceanManager.h</label>
      </node>
      <node id="755">
        <label>vector</label>
      </node>
      <node id="763">
        <label>ParaXModel/BoneAnimProvider.h</label>
      </node>
      <node id="746">
        <label>SphereObject.h</label>
      </node>
      <node id="776">
        <label>ParaXAnimInstance.h</label>
      </node>
      <node id="737">
        <label>CanvasCamera.h</label>
      </node>
      <node id="749">
        <label>IEnvironmentSim.h</label>
      </node>
      <node id="765">
        <label>ParaScriptingScene.h</label>
        <link refid="_para_scripting_scene_8h_source"/>
        <childnode refid="766" relation="include">
        </childnode>
        <childnode refid="771" relation="include">
        </childnode>
        <childnode refid="767" relation="include">
        </childnode>
        <childnode refid="762" relation="include">
        </childnode>
      </node>
      <node id="777">
        <label>time.h</label>
      </node>
      <node id="742">
        <label>BipedObject.h</label>
      </node>
      <node id="735">
        <label>ViewportManager.h</label>
      </node>
      <node id="772">
        <label>ZoneNode.h</label>
      </node>
      <node id="764">
        <label>CustomCharSettings.h</label>
      </node>
      <node id="768">
        <label>util/LogService.h</label>
      </node>
      <node id="734">
        <label>ParaWorldAsset.h</label>
      </node>
      <node id="766">
        <label>ParaScriptingCommon.h</label>
        <link refid="_para_scripting_common_8h_source"/>
        <childnode refid="767" relation="include">
        </childnode>
        <childnode refid="770" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_para_engine">ParaEngine</innernamespace>
    <innernamespace refid="namespace_para_scripting">ParaScripting</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_para_scripting_scene_8cpp_1aa1f94bd31a6bfcc3c798b4c0b3d4d442" prot="public" static="no">
        <name>USE_RPG_CHARACTER</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ParaScriptBindings/ParaScriptingScene.cpp" line="63" column="9" bodyfile="ParaScriptBindings/ParaScriptingScene.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_para_scripting_scene_8cpp_1af2ece2140007f0748736c22c5c416b88" prot="public" static="no">
        <name>DELETE_FROM_DB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ParaScriptBindings/ParaScriptingScene.cpp" line="66" column="9" bodyfile="ParaScriptBindings/ParaScriptingScene.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_para_scripting_scene_8cpp_1a366a70c4b881c4fbd2cbb4e6951d1cd3" prot="public" static="no">
        <name>MAX_TYPE_LENGTH</name>
        <initializer>47</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ParaScriptBindings/ParaScriptingScene.cpp" line="1577" column="9"/>
      </memberdef>
      <memberdef kind="define" id="_para_scripting_scene_8cpp_1aecd2452f627f5c51c03e65e3a148d075" prot="public" static="no">
        <name>object_cast_checkNumber</name>
        <param><defname>x</defname></param>
        <initializer>((type(x)==LUA_TNUMBER) ? (object_cast&lt;float&gt;(x)) : 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ParaScriptBindings/ParaScriptingScene.cpp" line="2462" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_para_scripting_scene_8cpp_1a2b67e9b43d05a8622dbba7bdeb0a8d1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PE_CORE_DECL bool</type>
        <definition>PE_CORE_DECL bool ParaScene_CheckExist</definition>
        <argsstring>(int nID)</argsstring>
        <name>ParaScene_CheckExist</name>
        <param>
          <type>int</type>
          <declname>nID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ParaScriptBindings/ParaScriptingScene.cpp" line="3232" column="1" bodyfile="ParaScriptBindings/ParaScriptingScene.cpp" bodystart="3232" bodyend="3235"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Class:<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Authors:<sp/>Li,Xizhi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Emails:<sp/><sp/>LiXizhi@yeah.net</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Date:<sp/><sp/><sp/><sp/>2004.4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Revised:<sp/>2005.4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ParaEngine.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_DIRECTX_RENDERER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SpriteObject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;VoxelMesh.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LightObject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;DynamicObject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CadModel/CadModel.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CadModel/CadModelNode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ParaWorldAsset.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ViewportManager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AttributesManager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CanvasCamera.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;IParaEngineApp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TerrainTile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AutoCamera.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SceneObject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;BipedObject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SceneObjectPicking.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MeshObject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MissileObject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SphereObject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SkyMesh.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MeshPhysicsObject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;IEnvironmentSim.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;IGameObject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;2dengine/GUIRoot.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;OceanManager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;EventsCenter.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;terrain/GlobalTerrain.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TerrainTileRoot.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ShapeAABB.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ShapeOBB.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MiniSceneGraph.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ParaXModel/BoneAnimProvider.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CustomCharSettings.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ParaScriptingScene.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ZoneNode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SunLight.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;PortalNode.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SelectionManager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ParaXAnimInstance.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lua.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;luabind/luabind.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;luabind/object.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceluabind" kindref="compound">luabind</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;memdebug.h&quot;</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor">#define<sp/>USE_RPG_CHARACTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor">#define<sp/>DELETE_FROM_DB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_para_engine" kindref="compound">ParaEngine</ref></highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>my_rand();</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_para_scripting" kindref="compound">ParaScripting</ref></highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>sFnctFilter:<sp/>it<sp/>can<sp/>be<sp/>any<sp/>of<sp/>the<sp/>following<sp/>string.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>&quot;mesh&quot;:<sp/>mesh<sp/>any<sp/>mesh<sp/>object<sp/>in<sp/>the<sp/>scene.<sp/>Usually<sp/>for<sp/>selection<sp/>during<sp/>scene<sp/>editing.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>&quot;cmesh&quot;:<sp/>mesh<sp/>object<sp/>that<sp/>is<sp/>clickable<sp/>(associated<sp/>with<sp/>scripts).<sp/>Usually<sp/>for<sp/>game<sp/>playing.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>&quot;notplayer&quot;:<sp/>any<sp/>object<sp/>in<sp/>the<sp/>scene<sp/>except<sp/>for<sp/>the<sp/>current<sp/>player.<sp/>Usually<sp/>for<sp/>selection<sp/>during<sp/>scene<sp/>editing.</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>&quot;&quot;:<sp/>any<sp/>object<sp/>in<sp/>the<sp/>scene<sp/>except.<sp/>Usually<sp/>for<sp/>selection<sp/>during<sp/>scene<sp/>editing.</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>&quot;light&quot;:<sp/>only<sp/>pick<sp/>light<sp/>objects</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>&quot;biped&quot;:<sp/>any<sp/>character<sp/>objects<sp/>:local<sp/>or<sp/>global.</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>&quot;anyobject&quot;:<sp/>any<sp/>objects,<sp/>including<sp/>mesh<sp/>and<sp/>characters.<sp/>but<sp/>not<sp/>including<sp/>helper<sp/>objects,<sp/>such<sp/>as<sp/>light.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>&quot;global&quot;:<sp/>all<sp/>global<sp/>objects,<sp/>such<sp/>as<sp/>global<sp/>character<sp/>and<sp/>mesh.<sp/>This<sp/>is<sp/>usually<sp/>for<sp/>game<sp/>mode.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>&quot;actionmesh&quot;:<sp/>mesh<sp/>with<sp/>action<sp/>script.<sp/></highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>@return:<sp/>the<sp/>total<sp/>number<sp/>of<sp/>selected<sp/>objects<sp/>is<sp/>returned.<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>OBJECT_FILTER_CALLBACK<sp/>GetFilterFuncByName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sFilterFunc)<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OBJECT_FILTER_CALLBACK<sp/>pFilterFunc<sp/>=<sp/>g_fncPickingAll;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sFilterFunc<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFilterFunc<sp/>=<sp/>g_fncPickingAll;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(sFilterFunc,<sp/></highlight><highlight class="stringliteral">&quot;notplayer&quot;</highlight><highlight class="normal">)==0)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFilterFunc<sp/>=<sp/>g_fncPickingNotPlayer;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(sFilterFunc,<sp/></highlight><highlight class="stringliteral">&quot;anyobject&quot;</highlight><highlight class="normal">)==0)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFilterFunc<sp/>=<sp/>g_fncPickingAnyObject;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(sFilterFunc,<sp/></highlight><highlight class="stringliteral">&quot;light&quot;</highlight><highlight class="normal">)==0)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFilterFunc<sp/>=<sp/>g_fncPickingLight;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(sFilterFunc,<sp/></highlight><highlight class="stringliteral">&quot;actionmesh&quot;</highlight><highlight class="normal">)==0)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFilterFunc<sp/>=<sp/>g_fncPickingActionMesh;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(sFilterFunc,<sp/></highlight><highlight class="stringliteral">&quot;global&quot;</highlight><highlight class="normal">)==0)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFilterFunc<sp/>=<sp/>g_fncPickingGlobal;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(sFilterFunc,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)==0)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFilterFunc<sp/>=<sp/>g_fncPickingAll;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(sFilterFunc,<sp/></highlight><highlight class="stringliteral">&quot;mesh&quot;</highlight><highlight class="normal">)==0)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFilterFunc<sp/>=<sp/>g_fncPickingMesh;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(sFilterFunc,<sp/></highlight><highlight class="stringliteral">&quot;biped&quot;</highlight><highlight class="normal">)==0)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFilterFunc<sp/>=<sp/>g_fncPickingBiped;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(sFilterFunc,<sp/></highlight><highlight class="stringliteral">&quot;cmesh&quot;</highlight><highlight class="normal">)==0)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFilterFunc<sp/>=<sp/>g_fncPickingNPCMesh;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sFilterFunc[0]&gt;=</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>sFilterFunc[0]&lt;=</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filter<sp/>by<sp/>type.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/>filter<sp/>=<sp/>atoi(sFilterFunc);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(filter!=0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetPickingFilter(filter);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFilterFunc<sp/>=<sp/>g_fncPickingByObjectTypes;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sFilterFunc[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>sFilterFunc[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>sFilterFunc[2]&gt;=</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>sFilterFunc[2]&lt;=</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filter<sp/>by<sp/>physics<sp/>group.<sp/><sp/>e.g.<sp/>&quot;p:4294967295&quot;<sp/>matches<sp/>all<sp/>physics<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/>filter<sp/>=<sp/>atoi(sFilterFunc+2);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetPickingPhysicsFilter(filter);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFilterFunc<sp/>=<sp/>g_fncPickingByPhysicsGroup;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(sFilterFunc,<sp/></highlight><highlight class="stringliteral">&quot;point&quot;</highlight><highlight class="normal">)==0)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pFilterFunc;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/><ref refid="namespace_para_scripting_1a22005d59cfab951409e57bf47856fc3b" kindref="member">GetPhysicsGroupMaskByName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sFilterFunc)<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sFilterFunc)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(sFilterFunc,<sp/></highlight><highlight class="stringliteral">&quot;walkpoint&quot;</highlight><highlight class="normal">)==0)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0xfffffff2;<sp/></highlight><highlight class="comment">//<sp/>tricky:<sp/>we<sp/>will<sp/>ignore<sp/>group<sp/>0<sp/>and<sp/>2.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(sFilterFunc,<sp/></highlight><highlight class="stringliteral">&quot;terrain&quot;</highlight><highlight class="normal">)==0)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0x0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetScene()-&gt;GetPhysicsGroupMask();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>ParaObject<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">ParaObject::ParaObject(){};</highlight></codeline>
<codeline lineno="163"><highlight class="normal">ParaObject::ParaObject(CBaseObject*<sp/>pObj):m_pObj(pObj){};</highlight></codeline>
<codeline lineno="164"><highlight class="normal">ParaObject::~ParaObject(){}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a197d7eb4798570096319e6fa5d392413" kindref="member">ParaObject::IsValid</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj;}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a38069bd89c6eb3154e9a4fe6a54269e6" kindref="member">ParaObject::equals</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ParaObject<sp/>obj)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="168"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj<sp/>==<sp/>obj.m_pObj;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_para_scripting_1_1_para_object_1a786a3b50672aea527292f0f55675ffba" kindref="member">ParaObject::ToString</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="173"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ToString1(</highlight><highlight class="stringliteral">&quot;create&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_para_scripting_1_1_para_object_1a6492e6b2524c858ee8cf8d5923451b46" kindref="member">ParaObject::ToString1</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sMethod)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="178"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sScript_;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(</highlight><highlight class="stringliteral">&quot;create&quot;</highlight><highlight class="normal">,<sp/>sMethod)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sScript_<sp/>=<sp/>m_pObj-&gt;ToString(CBaseObject::NPL_CREATE);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(</highlight><highlight class="stringliteral">&quot;loader&quot;</highlight><highlight class="normal">,<sp/>sMethod)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sScript_<sp/>=<sp/>m_pObj-&gt;ToString(CBaseObject::NPL_CREATE_IN_LOADER);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(</highlight><highlight class="stringliteral">&quot;delete&quot;</highlight><highlight class="normal">,<sp/>sMethod)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sScript_<sp/>=<sp/>m_pObj-&gt;ToString(CBaseObject::NPL_DELETE);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(</highlight><highlight class="stringliteral">&quot;update&quot;</highlight><highlight class="normal">,<sp/>sMethod)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sScript_<sp/>=<sp/>m_pObj-&gt;ToString(CBaseObject::NPL_UPDATE);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sScript_=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sScript_.c_str();</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_para_scripting_1_1_para_object_1a9635c9749259ee50ea83b55802fbb5e5" kindref="member">ParaObject::GetType</ref>()</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!IsValid())</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetString(0).c_str();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;GetAttributeClassName();</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a84efae73b7b8cc2e593d8c4a84c7c6ac" kindref="member">ParaObject::GetMyType</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="203"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!IsValid())</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(m_pObj-&gt;GetMyType());</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a20fb50d8893f7e3182e196d7c7c6c0e9" kindref="member">ParaObject::GetID</ref>()</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!IsValid())</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;GetID();</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">ParaAssetObject<sp/><ref refid="class_para_scripting_1_1_para_object_1ad74b98cacb87efcb767af45d772f5b87" kindref="member">ParaObject::GetPrimaryAsset</ref>()</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaAssetObject(IsValid()?<sp/>m_pObj-&gt;GetPrimaryAsset()<sp/>:<sp/>NULL);</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1abe05c07ffd1f6f93c30f78f19db70a84" kindref="member">ParaObject::GetPrimaryAsset_</ref>(ParaAssetObject*<sp/>pOut)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>*pOut<sp/>=<sp/>GetPrimaryAsset();</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">ParaCharacter<sp/><sp/><ref refid="class_para_scripting_1_1_para_object_1aac26dfa773ed793946f5723b981259a4" kindref="member">ParaObject::ToCharacter</ref>()</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaCharacter(m_pObj);</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a8e9d99229c9daccf2b6f9f73eaca143d" kindref="member">ParaObject::DistanceTo</ref>(ParaObject<sp/>obj)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>obj.IsValid())</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DVector3<sp/>v1<sp/>=<sp/>obj.m_pObj-&gt;GetPosition();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DVector3<sp/>v2<sp/>=<sp/>m_pObj-&gt;GetPosition();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fDist<sp/>=<sp/>(float)((v1-v2).squaredLength());</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fDist&gt;0.001f)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDist<sp/>=<sp/>sqrtf(fDist);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fDist;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a9f5cc34ff3ba846f3e4faa8ab97ec3c7" kindref="member">ParaObject::DistanceToSq</ref>(ParaObject<sp/>obj)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>obj.IsValid())</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DVector3<sp/>v1<sp/>=<sp/>obj.m_pObj-&gt;GetPosition();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DVector3<sp/>v2<sp/>=<sp/>m_pObj-&gt;GetPosition();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)((v1-v2).squaredLength());</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1ad87cc06b927fe0f19dd10a72fcb6bd04" kindref="member">ParaObject::DistanceToPlayerSq</ref>()</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CBipedObject*<sp/>pPlayer<sp/>=<sp/>CGlobals::GetScene()-&gt;GetCurrentPlayer();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pPlayer!=0)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DVector3<sp/>v1<sp/>=<sp/>pPlayer-&gt;GetPosition();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DVector3<sp/>v2<sp/>=<sp/>m_pObj-&gt;GetPosition();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)((v1-v2).squaredLength());</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a12c11c0b56ee6453b4f193c9317cfdbf" kindref="member">ParaObject::DistanceToCameraSq</ref>()</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CBaseCamera*<sp/>pCamera<sp/>=<sp/>CGlobals::GetScene()-&gt;GetCurrentCamera();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pCamera!=0)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DVector3<sp/>v1<sp/>=<sp/>pCamera-&gt;GetEyePosition();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DVector3<sp/>v2<sp/>=<sp/>m_pObj-&gt;GetPosition();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)((v1-v2).squaredLength());</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal">IGameObject*<sp/><ref refid="class_para_scripting_1_1_para_object_1af68bc53681ea2b5ab0546e720d169234" kindref="member">ParaObject::ToGameObject</ref>()</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;QueryIGameObject();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a3149571ad6ca1dff2105c6871e858632" kindref="member">ParaObject::AddEvent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strEvent,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nEventType,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bIsUnique)</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsValid())</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;ProcessObjectEvent(ObjectEvent(strEvent,<sp/>nEventType));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a5d38b4fb6f83d61c95f9fb4dec0d6e5f" kindref="member">ParaObject::IsAttached</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="303"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_pObj-&gt;GetTileContainer()!=NULL);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal">ParaAttributeObject<sp/><ref refid="class_para_scripting_1_1_para_object_1af89fe292cb8f53af915efa9e2fbeb0a8" kindref="member">ParaObject::GetAttributeObject</ref>()</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaAttributeObject(m_pObj);</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1acd812099f4f201b5290d5caab6fbee29" kindref="member">ParaObject::GetAttributeObject_</ref>(ParaAttributeObject&amp;<sp/>output)</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>GetAttributeObject();</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a81887ff5a3fdb3b1043cc2a8eb31c44d" kindref="member">ParaObject::CheckLoadPhysics</ref>()</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DVector3<sp/>vPos<sp/>=<sp/>m_pObj-&gt;GetPosition();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGlobals::GetEnvSim()-&gt;CheckLoadPhysics(vPos,<sp/>m_pObj-&gt;GetPhysicsRadius()*2.f);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a655f3b7a9594273dcb16e59285786309" kindref="member">ParaObject::LoadPhysics</ref>()</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;SetAlwaysLoadPhysics(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;LoadPhysics();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1ac8b76a69701cd8eb26d31f64bf29f8f0" kindref="member">ParaObject::SetPosition</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!IsValid())</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>DVector3<sp/>v(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pObj-&gt;GetMyType()<sp/>!=<sp/>_LocalLight)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;SetPosition(v);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;SetObjectCenter(v);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>The<sp/>Y<sp/>base<sp/>coordinate<sp/>acts<sp/>as<sp/>a<sp/>&apos;zero<sp/>point&apos;<sp/>for<sp/>the<sp/>height<sp/>values<sp/>in<sp/>the<sp/>upcoming<sp/>height<sp/>map<sp/>-<sp/>that<sp/>is,<sp/></highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>height<sp/>values<sp/>are<sp/>added<sp/>to<sp/>this<sp/>Y<sp/>height<sp/>to<sp/>form<sp/>the<sp/>final<sp/>y<sp/>component<sp/>of<sp/>the<sp/>object&apos;s<sp/>position.</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_pObj-&gt;SetPosition(&amp;Vector3(x,y+CGlobals::GetGlobalTerrain()-&gt;GetElevation(x,<sp/>z),z));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>/**<sp/>since<sp/>the<sp/>object<sp/>has<sp/>moved,<sp/>we<sp/>may<sp/>need<sp/>to<sp/>update<sp/>its<sp/>location<sp/>in<sp/>the<sp/>scene<sp/>graph<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*<sp/>we<sp/>only<sp/>do<sp/>this<sp/>for<sp/>static<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a88cd8c013ef66684fb3507d624c2b5e3" kindref="member">ParaObject::GetPosition</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*z)</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!IsValid())</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>DVector3<sp/>v;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pObj-&gt;GetMyType()<sp/>!=<sp/>_LocalLight)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>m_pObj-&gt;GetPosition();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>m_pObj-&gt;GetObjectCenter();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//x<sp/>=<sp/>v.x;y<sp/>=<sp/>v.y-CGlobals::GetGlobalTerrain()-&gt;GetElevation(v.x,<sp/>v.z);z<sp/>=<sp/>v.z;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>v.x;*y<sp/>=<sp/>v.y;*z<sp/>=<sp/>v.z;</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a3b2bd2b438d740195566e5f5b3d70f93" kindref="member">ParaObject::GetViewCenter</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*z)</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!IsValid())</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>IViewClippingObject*<sp/>pViewObj<sp/>=<sp/><sp/>m_pObj-&gt;GetViewClippingObject();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pViewObj!=0)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DVector3<sp/>v<sp/>=<sp/>pViewObj-&gt;GetObjectCenter();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>v.x;*y<sp/>=<sp/>v.y;*z<sp/>=<sp/>v.z;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a24335694bb4bc46eba5e112ead94c6c9" kindref="member">ParaObject::GetPhysicsRadius</ref>()</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsCharacter())</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((CBipedObject*)m_pObj)-&gt;GetPhysicsRadius();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pObj)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;GetRadius();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.f;</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a5384199b74a390800bc46011ac008cb7" kindref="member">ParaObject::SetPhysicsRadius</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fR)</highlight></codeline>
<codeline lineno="402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsCharacter())</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CBipedObject*)m_pObj)-&gt;SetPhysicsRadius(fR);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pObj)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;SetRadius(fR);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a76552790e63d6044dedfde7417c33771" kindref="member">ParaObject::GetPhysicsHeight</ref>()</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsCharacter())</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((CBipedObject*)m_pObj)-&gt;GetPhysicsHeight();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.f;</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a85b0b7d576e04cfe03a340cd78a6f025" kindref="member">ParaObject::SetPhysicsHeight</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fHeight)</highlight></codeline>
<codeline lineno="423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsCharacter())</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CBipedObject*)m_pObj)-&gt;SetPhysicsHeight(fHeight);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a5f806ed414b8db46589dcbd7eaeaf39a" kindref="member">ParaObject::SetDensity</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fDensity)</highlight></codeline>
<codeline lineno="431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>m_pObj-&gt;IsBiped())</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CBipedObject*)m_pObj)-&gt;SetDensity(fDensity);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1ac4a14fda646111e3d7fb29580c936878" kindref="member">ParaObject::GetDensity</ref>()</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>m_pObj-&gt;IsBiped())</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((CBipedObject*)m_pObj)-&gt;GetDensity();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0f;</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1adf250b11b2e29e4100c53cf2849728be" kindref="member">ParaObject::Rotate</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!IsValid())</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pObj-&gt;Rotate(x,y,z);</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a663993b1a6f8833791262a953dc85920" kindref="member">ParaObject::Reset</ref>()</highlight></codeline>
<codeline lineno="454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>currently,<sp/>I<sp/>used<sp/>scaling<sp/>over<sp/>the<sp/>original<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;Reset();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1ab155d5846420ab8808df5632abdf5a55" kindref="member">ParaObject::Scale</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s)</highlight></codeline>
<codeline lineno="463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>currently,<sp/>I<sp/>used<sp/>scaling<sp/>over<sp/>the<sp/>original<sp/>scale.<sp/>so<sp/>the<sp/>scripting<sp/>interface<sp/>has<sp/>different<sp/>meaning<sp/>from<sp/>the<sp/>game<sp/>engine<sp/>interface.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldscale<sp/>=<sp/>m_pObj-&gt;GetScaling();</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;SetScaling(oldscale*s);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ParaObject::SetScaling(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s)</highlight></codeline>
<codeline lineno="472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>Scale(s);</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1ae61b37c9ec9101a59383b39753aab8ca" kindref="member">ParaObject::OffsetPosition</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dz)</highlight></codeline>
<codeline lineno="476"><highlight class="normal">{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,y,z;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>GetPosition(&amp;x,&amp;y,&amp;z);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>x+=dx;y+=dy;z+=dz;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPosition(x,y,z);</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a3f48a3ee63d1c7bdc0195a94d841568b" kindref="member">ParaObject::GetScale</ref>()</highlight></codeline>
<codeline lineno="484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;GetScaling();</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.f;</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1abd01eb72c1b03404209a0d4ca09780f8" kindref="member">ParaObject::SetScale</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s<sp/>)</highlight></codeline>
<codeline lineno="493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;SetScaling(s);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1ab14459d81fbb461157850861b4d74c8a" kindref="member">ParaObject::GetRotation</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&amp;<sp/>quat<sp/>)</highlight></codeline>
<codeline lineno="501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type(quat)<sp/>==<sp/>LUA_TTABLE<sp/>&amp;&amp;<sp/>IsValid())</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Quaternion<sp/>q(0,0,0,1);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;GetRotation(&amp;q);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quat[</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">]<sp/>=<sp/>q.x;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quat[</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">]<sp/>=<sp/>q.y;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quat[</highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">]<sp/>=<sp/>q.z;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quat[</highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">]<sp/>=<sp/>q.w;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>object(quat);</highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a8b2825b826561cffc279b98d8fbe1f23" kindref="member">ParaObject::SetRotation</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&amp;<sp/>quat<sp/>)</highlight></codeline>
<codeline lineno="515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type(quat)<sp/>==<sp/>LUA_TTABLE<sp/>&amp;&amp;<sp/>IsValid())</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Quaternion<sp/>q(0,0,0,1);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&amp;<sp/>oX<sp/>=<sp/>quat[</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type(oX)<sp/>==<sp/>LUA_TNUMBER){</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.x<sp/>=<sp/>object_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(oX);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&amp;<sp/>oY<sp/>=<sp/>quat[</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type(oY)<sp/>==<sp/>LUA_TNUMBER){</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.y<sp/>=<sp/>object_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(oY);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&amp;<sp/>oZ<sp/>=<sp/>quat[</highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type(oZ)<sp/>==<sp/>LUA_TNUMBER){</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.z<sp/>=<sp/>object_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(oZ);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&amp;<sp/>oW<sp/>=<sp/>quat[</highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type(oW)<sp/>==<sp/>LUA_TNUMBER){</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q.w<sp/>=<sp/>object_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(oW);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;SetRotation(q);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a48f35e380f28a30be79d8c2c8ede11ab" kindref="member">ParaObject::SetFacing</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fFacing)<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;SetFacing(fFacing);</highlight></codeline>
<codeline lineno="548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="550"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1acfea56f028d54f0759116b999dd8659d" kindref="member">ParaObject::GetFacing</ref>()<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;GetFacing();</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1adffa045b187a9debfc8924e6df8c478a" kindref="member">ParaObject::GetName</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;GetIdentifier();</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetString();</highlight></codeline>
<codeline lineno="559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_para_scripting_1_1_para_object_1a4426b9584d0b0694f5d24613a64fb344" kindref="member">ParaObject::GetName_</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="561"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>g_str;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>g_str<sp/>=<sp/>GetName();</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g_str.c_str();</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a3f04234bfafe12a31503725d1e1d97b6" kindref="member">ParaObject::SetName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sName)</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>sName!=0)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pObj-&gt;GetIdentifier()<sp/>!=<sp/>sName)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>not<sp/>change<sp/>the<sp/>name<sp/>of<sp/>a<sp/>certain<sp/>object.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(m_pObj<sp/>==<sp/>CGlobals::GetScene()-&gt;GetCurrentPlayer())<sp/>||<sp/>(m_pObj-&gt;GetMyType()<sp/>==<sp/>_OPC))</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>not<sp/>change<sp/>the<sp/>name<sp/>if<sp/>there<sp/>is<sp/>already<sp/>an<sp/>global<sp/>object<sp/>with<sp/>the<sp/>new<sp/>name<sp/>or<sp/>the<sp/>name<sp/>is<sp/>blank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_pObj-&gt;IsGlobal()<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sName[0]==</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>||<sp/>(CGlobals::GetScene()-&gt;GetGlobalObject(sName)<sp/>!=NULL))<sp/>)</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pObj-&gt;GetTileContainer()<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>object<sp/>has<sp/>never<sp/>been<sp/>attached<sp/>before,<sp/>just<sp/>rename<sp/>it<sp/>anyway.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;SetIdentifier(sName);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>the<sp/>object<sp/>name,<sp/>by<sp/>first<sp/>detach<sp/>from<sp/>the<sp/>scene<sp/>and<sp/>then<sp/>reattach<sp/>it<sp/>to<sp/>the<sp/>scene.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;DetachObject(m_pObj);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;SetIdentifier(sName);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;AttachObject(m_pObj);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a455590f45600d036769547c84d7f630b" kindref="member">ParaObject::SnapToTerrainSurface</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bUseNorm){</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;SnapToTerrainSurface(bUseNorm&gt;0);</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="604"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a1a009a2720a1da767c2e8cb235d5bf5f" kindref="member">ParaObject::IsCharacter</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_pObj-&gt;IsBiped());</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a9ccb8e29e0ef0fbc7497d301ad3015d3" kindref="member">ParaObject::IsOPC</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="610"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_pObj-&gt;IsBiped())<sp/>&amp;&amp;<sp/>(m_pObj-&gt;GetMyType()==_OPC);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a610af924c795391f53fe6edef1cb7538" kindref="member">ParaObject::AddChild</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ParaObject<sp/>obj){</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>obj.IsValid())</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;AddChild(obj.get());</highlight></codeline>
<codeline lineno="621"><highlight class="normal">};</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a72a34f5e698e0cef6a2f770820bda131" kindref="member">ParaObject::EnablePhysics</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bEnable)</highlight></codeline>
<codeline lineno="623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;EnablePhysics(bEnable);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1ada3d2704acbea283d49cbd4c70c35632" kindref="member">ParaObject::IsPhysicsEnabled</ref>()</highlight></codeline>
<codeline lineno="630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;IsPhysicsEnabled();</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1aa97d613bbe8503314b91cc77d5f0bb55" kindref="member">ParaObject::GetOnEnterSentientArea</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="639"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pGameObj<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>((pGameObj<sp/>=<sp/>m_pObj-&gt;QueryIGameObject())<sp/>!=NULL))</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IGameObject::ScriptCallback<sp/>*<sp/>pCallBack<sp/>=<sp/>pGameObj-&gt;GetScriptCallback(IGameObject::Type_EnterSentientArea);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pCallBack!=NULL)</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pCallBack-&gt;GetScriptFunc();</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ParaObject::SetOnEnterSentientArea(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>script)</highlight></codeline>
<codeline lineno="653"><highlight class="normal">{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pGameObj<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>((pGameObj<sp/>=<sp/>m_pObj-&gt;QueryIGameObject())<sp/>!=NULL))</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGameObj-&gt;AddScriptCallback(IGameObject::Type_EnterSentientArea,<sp/>script);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1ae1a9cda1da35971a47c5f035e2e75c6b" kindref="member">ParaObject::GetOnLeaveSentientArea</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="662"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pGameObj<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>((pGameObj<sp/>=<sp/>m_pObj-&gt;QueryIGameObject())<sp/>!=NULL))</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IGameObject::ScriptCallback<sp/>*<sp/>pCallBack<sp/>=<sp/>pGameObj-&gt;GetScriptCallback(IGameObject::Type_LeaveSentientArea);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pCallBack!=NULL)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pCallBack-&gt;GetScriptFunc();</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ParaObject::SetOnLeaveSentientArea(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>script)</highlight></codeline>
<codeline lineno="676"><highlight class="normal">{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pGameObj<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>((pGameObj<sp/>=<sp/>m_pObj-&gt;QueryIGameObject())<sp/>!=NULL))</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGameObj-&gt;AddScriptCallback(IGameObject::Type_LeaveSentientArea,<sp/>script);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a232e118cb8da3ebdc2d670710d5d1c60" kindref="member">ParaObject::On_Click</ref>(DWORD<sp/>nMouseKey,<sp/>DWORD<sp/>dwParam1,<sp/><sp/>DWORD<sp/>dwParam2)</highlight></codeline>
<codeline lineno="684"><highlight class="normal">{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pGameObj<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>((pGameObj<sp/>=<sp/>m_pObj-&gt;QueryIGameObject())<sp/>!=NULL))</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGameObj-&gt;On_Click(nMouseKey,<sp/>dwParam1,<sp/>dwParam2);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1ac9104089374359a7b88cd3ee54527549" kindref="member">ParaObject::GetOnClick</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="692"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pGameObj<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>((pGameObj<sp/>=<sp/>m_pObj-&gt;QueryIGameObject())<sp/>!=NULL))</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IGameObject::ScriptCallback<sp/>*<sp/>pCallBack<sp/>=<sp/>pGameObj-&gt;GetScriptCallback(IGameObject::Type_Click);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pCallBack!=NULL)</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pCallBack-&gt;GetScriptFunc();</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ParaObject::SetOnClick(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>script)</highlight></codeline>
<codeline lineno="706"><highlight class="normal">{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pGameObj<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>((pGameObj<sp/>=<sp/>m_pObj-&gt;QueryIGameObject())<sp/>!=NULL))</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGameObj-&gt;AddScriptCallback(IGameObject::Type_Click,<sp/>script);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a6bda1756cce7a5aea7f0ae56e18e7f80" kindref="member">ParaObject::GetOnPerceived</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="715"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pGameObj<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>((pGameObj<sp/>=<sp/>m_pObj-&gt;QueryIGameObject())<sp/>!=NULL))</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IGameObject::ScriptCallback<sp/>*<sp/>pCallBack<sp/>=<sp/>pGameObj-&gt;GetScriptCallback(IGameObject::Type_Perception);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pCallBack!=NULL)</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pCallBack-&gt;GetScriptFunc();</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ParaObject::SetOnPerceived(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>script)</highlight></codeline>
<codeline lineno="729"><highlight class="normal">{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pGameObj<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>((pGameObj<sp/>=<sp/>m_pObj-&gt;QueryIGameObject())<sp/>!=NULL))</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGameObj-&gt;AddScriptCallback(IGameObject::Type_Perception,<sp/>script);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1ae578e7f22d8b1615264221fcbaf2bd7b" kindref="member">ParaObject::GetOnFrameMove</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="738"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pGameObj<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>((pGameObj<sp/>=<sp/>m_pObj-&gt;QueryIGameObject())<sp/>!=NULL))</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IGameObject::ScriptCallback<sp/>*<sp/>pCallBack<sp/>=<sp/>pGameObj-&gt;GetScriptCallback(IGameObject::Type_FrameMove);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pCallBack!=NULL)</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pCallBack-&gt;GetScriptFunc();</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ParaObject::SetOnFrameMove(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>script)</highlight></codeline>
<codeline lineno="752"><highlight class="normal">{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pGameObj<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>((pGameObj<sp/>=<sp/>m_pObj-&gt;QueryIGameObject())<sp/>!=NULL))</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGameObj-&gt;AddScriptCallback(IGameObject::Type_FrameMove,<sp/>script);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a34041b4de1eb20d2798457d448c70916" kindref="member">ParaObject::GetOnNetSend</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="761"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pGameObj<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>((pGameObj<sp/>=<sp/>m_pObj-&gt;QueryIGameObject())<sp/>!=NULL))</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IGameObject::ScriptCallback<sp/>*<sp/>pCallBack<sp/>=<sp/>pGameObj-&gt;GetScriptCallback(IGameObject::Type_Net_Send);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pCallBack!=NULL)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pCallBack-&gt;GetScriptFunc();</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ParaObject::SetOnNetSend(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>script)</highlight></codeline>
<codeline lineno="775"><highlight class="normal">{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pGameObj<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>((pGameObj<sp/>=<sp/>m_pObj-&gt;QueryIGameObject())<sp/>!=NULL))</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGameObj-&gt;AddScriptCallback(IGameObject::Type_Net_Send,<sp/>script);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a8bf18c7e657762753d18c7fd84885334" kindref="member">ParaObject::GetOnNetReceive</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="784"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pGameObj<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>((pGameObj<sp/>=<sp/>m_pObj-&gt;QueryIGameObject())<sp/>!=NULL))</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IGameObject::ScriptCallback<sp/>*<sp/>pCallBack<sp/>=<sp/>pGameObj-&gt;GetScriptCallback(IGameObject::Type_Net_Receive);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pCallBack!=NULL)</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pCallBack-&gt;GetScriptFunc();</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ParaObject::SetOnNetReceive(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>script)</highlight></codeline>
<codeline lineno="798"><highlight class="normal">{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pGameObj<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>((pGameObj<sp/>=<sp/>m_pObj-&gt;QueryIGameObject())<sp/>!=NULL))</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGameObj-&gt;AddScriptCallback(IGameObject::Type_Net_Receive,<sp/>script);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a20c62813b6e2d5984ec43a22a8bf56eb" kindref="member">ParaObject::IsSentient</ref>()</highlight></codeline>
<codeline lineno="807"><highlight class="normal">{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pObj<sp/>=<sp/>ToGameObject();</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pObj!=NULL)</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pObj-&gt;IsSentient();</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1abe55876fad61c832670aa63e9aa06bf8" kindref="member">ParaObject::GetSentientRadius</ref>()</highlight></codeline>
<codeline lineno="817"><highlight class="normal">{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pObj<sp/>=<sp/>ToGameObject();</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pObj!=NULL)</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pObj-&gt;GetSentientRadius();</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.f;</highlight></codeline>
<codeline lineno="824"><highlight class="normal">}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a824f445c83686df90d20ed1a239da09f" kindref="member">ParaObject::GetPerceptiveRadius</ref>()</highlight></codeline>
<codeline lineno="827"><highlight class="normal">{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pObj<sp/>=<sp/>ToGameObject();</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pObj!=NULL)</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pObj-&gt;GetPerceptiveRadius();</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.f;</highlight></codeline>
<codeline lineno="834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1abd2981be1bd2ee717d4bb2605b50261b" kindref="member">ParaObject::SetPerceptiveRadius</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fNewRaduis)</highlight></codeline>
<codeline lineno="837"><highlight class="normal">{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pObj<sp/>=<sp/>ToGameObject();</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pObj!=NULL)</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetPerceptiveRadius(fNewRaduis);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a2fe22898457e0353dd213b621feaf8f5" kindref="member">ParaObject::GetNumOfPerceivedObject</ref>()</highlight></codeline>
<codeline lineno="847"><highlight class="normal">{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pObj<sp/>=<sp/>ToGameObject();</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pObj!=NULL)</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pObj-&gt;GetNumOfPerceivedObject();</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_object_1a97d50529528a9f008304e415efb94397" kindref="member">ParaObject::GetPerceivedObject</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIndex)</highlight></codeline>
<codeline lineno="857"><highlight class="normal">{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pObj<sp/>=<sp/>ToGameObject();</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pObj!=NULL)</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(pObj-&gt;GetPerceivedObject(nIndex));</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(NULL);</highlight></codeline>
<codeline lineno="864"><highlight class="normal">}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a4efe8f54484cca14620fbfbad3faa905" kindref="member">ParaObject::IsAlwaysSentient</ref>()</highlight></codeline>
<codeline lineno="867"><highlight class="normal">{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pObj<sp/>=<sp/>ToGameObject();</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pObj!=NULL)</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pObj-&gt;IsAlwaysSentient();</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="874"><highlight class="normal">}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1ad66019dd275ab8b15a5ae46465cf8e4d" kindref="member">ParaObject::SetAlwaysSentient</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bAlways)</highlight></codeline>
<codeline lineno="877"><highlight class="normal">{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pObj<sp/>=<sp/>ToGameObject();</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pObj!=NULL)</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetAlwaysSentient(bAlways);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1ab9a478ea06146f17747fcb2d7a01ef2a" kindref="member">ParaObject::MakeSentient</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSentient)</highlight></codeline>
<codeline lineno="886"><highlight class="normal">{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pObj<sp/>=<sp/>ToGameObject();</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pObj!=NULL)</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;MakeSentient(bSentient);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal">}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a2cbdd14f35599e9655e55022153df055" kindref="member">ParaObject::UpdateTileContainer</ref>()</highlight></codeline>
<codeline lineno="895"><highlight class="normal">{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;UpdateTileContainer();</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a101662d7a47887faa4050de208181bbf" kindref="member">ParaObject::MakeGlobal</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bGlobal)</highlight></codeline>
<codeline lineno="903"><highlight class="normal">{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pObj<sp/>=<sp/>ToGameObject();</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pObj!=NULL)</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;MakeGlobal(bGlobal);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1af43a8a24a5647425d2c1646884d6d878" kindref="member">ParaObject::IsGlobal</ref>()</highlight></codeline>
<codeline lineno="911"><highlight class="normal">{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;IsGlobal();</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="917"><highlight class="normal">}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1ac98b9fb54ae1d133a5d24ab94b0986ee" kindref="member">ParaObject::IsPersistent</ref>()</highlight></codeline>
<codeline lineno="920"><highlight class="normal">{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pObj<sp/>=<sp/>ToGameObject();</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pObj!=NULL)</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pObj-&gt;IsPersistent();</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1af38d8708c1cfc2439907b6b2179ed632" kindref="member">ParaObject::SetPersistent</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bPersistent)</highlight></codeline>
<codeline lineno="931"><highlight class="normal">{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;SetPersistent(bPersistent);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal">}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1aae0b23373f0a4a5820acef276f7a1f3d" kindref="member">ParaObject::SetMovableRegion</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>center_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>center_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>center_z,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>extent_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>extent_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>extent_z)</highlight></codeline>
<codeline lineno="939"><highlight class="normal">{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pObj<sp/>=<sp/>ToGameObject();</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pObj!=NULL)</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CShapeAABB<sp/>aabb(Vector3(center_x,<sp/>center_y,<sp/>center_z),<sp/>Vector3(extent_x,<sp/>extent_y,<sp/>extent_z));</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetMovableRegion(&amp;aabb);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="946"><highlight class="normal">}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1ade4a2e77c4a904407651ec1a05f20666" kindref="member">ParaObject::GetMovableRegion</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>center_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>center_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>center_z,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>extent_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>extent_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>extent_z)</highlight></codeline>
<codeline lineno="949"><highlight class="normal">{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pObj<sp/>=<sp/>ToGameObject();</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pObj!=NULL)</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CShapeAABB*<sp/>aabb<sp/>=<sp/>pObj-&gt;GetMovableRegion();</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(aabb!=0)</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*center_x<sp/>=<sp/>aabb-&gt;GetCenter(0);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*center_y<sp/>=<sp/>aabb-&gt;GetCenter(1);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*center_z<sp/>=<sp/>aabb-&gt;GetCenter(2);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*extent_x<sp/>=<sp/>aabb-&gt;GetExtents(0);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*extent_y<sp/>=<sp/>aabb-&gt;GetExtents(1);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*extent_z<sp/>=<sp/>aabb-&gt;GetExtents(2);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1ab309488f661e3c65963ad7d44e8a2b01" kindref="member">ParaObject::SaveToDB</ref>()</highlight></codeline>
<codeline lineno="968"><highlight class="normal">{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pObj<sp/>=<sp/>ToGameObject();</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pObj!=NULL)</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pObj-&gt;SaveToDB();</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a9266c5d84368e0abccfd0473b6cd93dc" kindref="member">ParaObject::SetGroupID</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nGroup)</highlight></codeline>
<codeline lineno="978"><highlight class="normal">{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pObj<sp/>=<sp/>ToGameObject();</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pObj!=NULL)</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetGroupID(nGroup);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="984"><highlight class="normal">}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a34f92a86464d8abfd09211188d4fe370" kindref="member">ParaObject::SetSentientField</ref>(DWORD<sp/>dwFieldOrGroup,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bIsGroup)</highlight></codeline>
<codeline lineno="987"><highlight class="normal">{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pObj<sp/>=<sp/>ToGameObject();</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pObj!=NULL)</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetSentientField(dwFieldOrGroup,<sp/>bIsGroup);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1ad8065fd9fe5ec8ea5cd780a46a457907" kindref="member">ParaObject::IsSentientWith</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ParaObject&amp;<sp/>obj)</highlight></codeline>
<codeline lineno="996"><highlight class="normal">{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>IGameObject*<sp/>pObj<sp/>=<sp/>ToGameObject();</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pObj!=NULL)</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pObj-&gt;IsSentientWith(obj.m_pObj-&gt;QueryIGameObject());</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a344e3e1cc29b773dfd450f6547bb0fda" kindref="member">ParaObject::GetEffectHandle</ref>()</highlight></codeline>
<codeline lineno="1006"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;GetPrimaryTechniqueHandle();</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a42dccb8263ec2138dae6e79cedaf9609" kindref="member">ParaObject::SetEffectHandle</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nHandle)</highlight></codeline>
<codeline lineno="1013"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;SetPrimaryTechniqueHandle(nHandle);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a6262cd03fa96218a3520dc5791c48ad9" kindref="member">ParaObject::SetHomeZone</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sHomeZone)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;SetHomeZoneName(sHomeZone);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_para_scripting_1_1_para_object_1a76dae7fa01555724ff04387b9563dadc" kindref="member">ParaObject::GetHomeZone</ref>()</highlight></codeline>
<codeline lineno="1025"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IsValid()<sp/>?<sp/>m_pObj-&gt;GetHomeZoneName()<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a6eff2456934ff53d297b3bc79a71e6b3" kindref="member">ParaObject::AddReference</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ParaObject&amp;<sp/>maker,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTag)</highlight></codeline>
<codeline lineno="1030"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>maker.IsValid())</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;AddReference(maker.get(),<sp/>nTag);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a38e3567f91f2b89d84b25d5308927b03" kindref="member">ParaObject::DeleteReference</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ParaObject&amp;<sp/><sp/>ref)</highlight></codeline>
<codeline lineno="1039"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>ref.IsValid())</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;DeleteReference(ref.get());</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a1ba4008f3ed477ff0520f548a7e19c21" kindref="member">ParaObject::DeleteAllRefs</ref>()</highlight></codeline>
<codeline lineno="1048"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;DeleteAllRefs();</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1ad4a252feae8f79de0ec4cd0779ae5c1c" kindref="member">ParaObject::GetRefObjNum</ref>()</highlight></codeline>
<codeline lineno="1057"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)m_pObj-&gt;GetRefObjNum();</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_object_1acaf03e9864fbbe7a1bf9aacab411377f" kindref="member">ParaObject::GetRefObject</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIndex)</highlight></codeline>
<codeline lineno="1066"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaObject<sp/>obj;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RefListItem*<sp/>item<sp/>=<sp/>m_pObj-&gt;<ref refid="class_para_scripting_1_1_para_object_1acaf03e9864fbbe7a1bf9aacab411377f" kindref="member">GetRefObject</ref>(nIndex);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(item!=0)</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.m_pObj<sp/>=<sp/>(CBaseObject*)item-&gt;m_object;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a535b56ebd96202c89d659e0e24d4e245" kindref="member">ParaObject::GetViewBox</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&amp;<sp/>output<sp/>)</highlight></codeline>
<codeline lineno="1078"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type(output)<sp/>==<sp/>LUA_TTABLE<sp/>&amp;&amp;<sp/>IsValid())</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DVector3<sp/>vPos<sp/>=<sp/>m_pObj-&gt;GetPosition();</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOBB_X,<sp/>fOBB_Y,<sp/>fOBB_Z,<sp/>fFacing;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;GetBoundingBox(&amp;fOBB_X,<sp/>&amp;fOBB_Y,<sp/>&amp;fOBB_Z,&amp;fFacing);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[</highlight><highlight class="stringliteral">&quot;pos_x&quot;</highlight><highlight class="normal">]<sp/>=<sp/>vPos.x;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[</highlight><highlight class="stringliteral">&quot;pos_y&quot;</highlight><highlight class="normal">]<sp/>=<sp/>vPos.y;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[</highlight><highlight class="stringliteral">&quot;pos_z&quot;</highlight><highlight class="normal">]<sp/>=<sp/>vPos.z;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[</highlight><highlight class="stringliteral">&quot;obb_x&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fOBB_X;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[</highlight><highlight class="stringliteral">&quot;obb_y&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fOBB_Y;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[</highlight><highlight class="stringliteral">&quot;obb_z&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fOBB_Z;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>object(output);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a64be137c443dcff397fb851ee931b701" kindref="member">ParaObject::GetNumReplaceableTextures</ref>()</highlight></codeline>
<codeline lineno="1095"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;GetNumReplaceableTextures();</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal">ParaAssetObject<sp/><ref refid="class_para_scripting_1_1_para_object_1a9c91dd0ee0820c57429b35c721baf1dd" kindref="member">ParaObject::GetDefaultReplaceableTexture</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ReplaceableTextureID<sp/>)</highlight></codeline>
<codeline lineno="1104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaAssetObject<sp/>texture;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texture.m_pAsset<sp/>=<sp/>m_pObj-&gt;GetDefaultReplaceableTexture(ReplaceableTextureID);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>texture;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal">ParaAssetObject<sp/><ref refid="class_para_scripting_1_1_para_object_1ab3805e19b1175ea6066d3ae69d8f2e3d" kindref="member">ParaObject::GetReplaceableTexture</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ReplaceableTextureID<sp/>)</highlight></codeline>
<codeline lineno="1114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaAssetObject<sp/>texture;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texture.m_pAsset<sp/>=<sp/>m_pObj-&gt;GetReplaceableTexture(ReplaceableTextureID);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>texture;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a473dfbf3d5c8894db5a40e124c43901e" kindref="member">ParaObject::SetReplaceableTexture</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ReplaceableTextureID,<sp/>ParaAssetObject<sp/>pTextureEntity<sp/>)</highlight></codeline>
<codeline lineno="1124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pTextureEntity.GetType()<sp/>==<sp/>AssetEntity::texture)</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;SetReplaceableTexture(ReplaceableTextureID,<sp/>(TextureEntity*)pTextureEntity.m_pAsset);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pTextureEntity.IsValid())</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;SetReplaceableTexture(ReplaceableTextureID,<sp/>NULL);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a28e3ab752c61fba83c6f817481bf502e" kindref="member">ParaObject::GetXRefScriptCount</ref>()</highlight></codeline>
<codeline lineno="1140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMeshObject*<sp/>pMesh<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pObj-&gt;GetType()<sp/>==<sp/>CBaseObject::MeshPhysicsObject)</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMesh<sp/>=<sp/>((CMeshPhysicsObject*)m_pObj)-&gt;GetMeshObject();</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pObj-&gt;GetType()<sp/>==<sp/>CBaseObject::MeshObject)</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMesh<sp/>=<sp/>(CMeshObject*)m_pObj;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pMesh)</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pMesh-&gt;GetXRefScriptCount();</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_para_scripting_1_1_para_object_1a600b799f5ed01eb9199b001782c93daa" kindref="member">ParaObject::GetXRefScript</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIndex<sp/>)</highlight></codeline>
<codeline lineno="1158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMeshObject*<sp/>pMesh<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pObj-&gt;GetType()<sp/>==<sp/>CBaseObject::MeshPhysicsObject)</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMesh<sp/>=<sp/>((CMeshPhysicsObject*)m_pObj)-&gt;GetMeshObject();</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pObj-&gt;GetType()<sp/>==<sp/>CBaseObject::MeshObject)</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMesh<sp/>=<sp/>(CMeshObject*)m_pObj;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pMesh)</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pMesh-&gt;GetXRefScript(nIndex);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a8ae275436dc7994ee64c98e6fc4af7e2" kindref="member">ParaObject::GetXRefScriptPosition</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIndex,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*z<sp/>)</highlight></codeline>
<codeline lineno="1176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMeshObject*<sp/>pMesh<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pObj-&gt;GetType()<sp/>==<sp/>CBaseObject::MeshPhysicsObject)</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMesh<sp/>=<sp/>((CMeshPhysicsObject*)m_pObj)-&gt;GetMeshObject();</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pObj-&gt;GetType()<sp/>==<sp/>CBaseObject::MeshObject)</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMesh<sp/>=<sp/>(CMeshObject*)m_pObj;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pMesh)</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>vOut<sp/>=<sp/>pMesh-&gt;GetXRefScriptPosition(nIndex);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>vOut.x;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*y<sp/>=<sp/>vOut.y;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*z<sp/>=<sp/>vOut.z;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1aeeaf0dcbba33db9438bf4782be4ca0df" kindref="member">ParaObject::GetXRefScriptScaling</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIndex,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*z<sp/>)</highlight></codeline>
<codeline lineno="1196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMeshObject*<sp/>pMesh<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pObj-&gt;GetType()<sp/>==<sp/>CBaseObject::MeshPhysicsObject)</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMesh<sp/>=<sp/>((CMeshPhysicsObject*)m_pObj)-&gt;GetMeshObject();</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pObj-&gt;GetType()<sp/>==<sp/>CBaseObject::MeshObject)</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMesh<sp/>=<sp/>(CMeshObject*)m_pObj;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pMesh)</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>vOut<sp/>=<sp/>pMesh-&gt;GetXRefScriptScaling(nIndex);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>vOut.x;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*y<sp/>=<sp/>vOut.y;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*z<sp/>=<sp/>vOut.z;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1aff6e1bd689120ef3d78fffe78fd27c87" kindref="member">ParaObject::GetXRefScriptFacing</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIndex<sp/>)</highlight></codeline>
<codeline lineno="1216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMeshObject*<sp/>pMesh<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pObj-&gt;GetType()<sp/>==<sp/>CBaseObject::MeshPhysicsObject)</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMesh<sp/>=<sp/>((CMeshPhysicsObject*)m_pObj)-&gt;GetMeshObject();</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pObj-&gt;GetType()<sp/>==<sp/>CBaseObject::MeshObject)</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMesh<sp/>=<sp/>(CMeshObject*)m_pObj;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pMesh)</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pMesh-&gt;GetXRefScriptFacing(nIndex);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.f;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_para_scripting_1_1_para_object_1acfc803df85d9480362b019d712e3dd50" kindref="member">ParaObject::GetXRefScriptLocalMatrix</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIndex<sp/>)</highlight></codeline>
<codeline lineno="1234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMeshObject*<sp/>pMesh<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pObj-&gt;GetType()<sp/>==<sp/>CBaseObject::MeshPhysicsObject)</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMesh<sp/>=<sp/>((CMeshPhysicsObject*)m_pObj)-&gt;GetMeshObject();</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pObj-&gt;GetType()<sp/>==<sp/>CBaseObject::MeshObject)</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMesh<sp/>=<sp/>(CMeshObject*)m_pObj;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pMesh)</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pMesh-&gt;GetXRefScriptLocalMatrix(nIndex);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a199ab949d755f87755c1f105ed61da33" kindref="member">ParaObject::IsStanding</ref>()</highlight></codeline>
<codeline lineno="1252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;IsStanding();</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1ab3683becc5a8e2913942db36f13695db" kindref="member">ParaObject::IsVisible</ref>()</highlight></codeline>
<codeline lineno="1261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;IsVisible();</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a2b720f3f8e91401eae487dd0dd544806" kindref="member">ParaObject::SetVisible</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bVisible<sp/>)</highlight></codeline>
<codeline lineno="1270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;SetVisibility(bVisible);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a9a883da2a8d71ecf59ab40749037122b" kindref="member">ParaObject::CheckAttribute</ref>(<sp/>DWORD<sp/>attribute<sp/>)</highlight></codeline>
<codeline lineno="1278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;CheckAttribute(attribute);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a40cfd9957cc7b58c98bca9e85048d9a5" kindref="member">ParaObject::SetAttribute</ref>(<sp/>DWORD<sp/>dwAtt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bTurnOn<sp/>)</highlight></codeline>
<codeline lineno="1287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;SetAttribute(dwAtt,<sp/>bTurnOn);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1ae84677f7d6fa2f8a09b5548bc819b679" kindref="member">ParaObject::SetHeadOnText</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sText<sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIndex)</highlight></codeline>
<codeline lineno="1295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;SetHeadOnText(sText,<sp/>nIndex);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_para_scripting_1_1_para_object_1a71d725bea0f9f3f7ec7d172128bc73ce" kindref="member">ParaObject::GetHeadOnText</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIndex)</highlight></codeline>
<codeline lineno="1303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;GetHeadOnText(nIndex);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a3bf7a19f218627c25becd90a3877766b" kindref="member">ParaObject::SetHeadOnUITemplateName</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sUIName<sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIndex)</highlight></codeline>
<codeline lineno="1312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;SetHeadOnUITemplateName(sUIName,<sp/>nIndex);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_para_scripting_1_1_para_object_1ab61ce9394f330d0b0031c2222dc081fe" kindref="member">ParaObject::GetHeadOnUITemplateName</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIndex)</highlight></codeline>
<codeline lineno="1320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;GetHeadOnUITemplateName(nIndex);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a8088e54610fb6bb97b06aaa18fd68760" kindref="member">ParaObject::SetHeadOnTextColor</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strColor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIndex<sp/>)</highlight></codeline>
<codeline lineno="1329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinearColor<sp/>color;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r,g,b,<sp/>a=255;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sscanf(strColor,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%d<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>&amp;r,&amp;g,&amp;b,&amp;a)&lt;3)</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color<sp/>=<sp/>LinearColor(1,1,1,1);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color=COLOR_ARGB(a,r,g,b);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;SetHeadOnTextColor(color,<sp/>nIndex);</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a4ce9395df386f9ddbdc265f8cde05240" kindref="member">ParaObject::SetHeadOnOffest</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIndex)</highlight></codeline>
<codeline lineno="1344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>vOffset(x,y,z);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;SetHeadOnOffest(vOffset,<sp/>nIndex);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a72e32138e01bd6bcca86879299dbdf4b" kindref="member">ParaObject::GetHeadOnOffset</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIndex,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>z<sp/>)</highlight></codeline>
<codeline lineno="1353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector3<sp/>vOffset(0,0,0);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;GetHeadOnOffset(&amp;vOffset,<sp/>nIndex);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>vOffset.x;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>*y<sp/>=<sp/>vOffset.y;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>*z<sp/>=<sp/>vOffset.z;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a98e3fa9f88e9f005c9e23f6a176e87a6" kindref="member">ParaObject::ShowHeadOnDisplay</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bShow<sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIndex)</highlight></codeline>
<codeline lineno="1365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;ShowHeadOnDisplay(bShow,<sp/>nIndex);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a8111cb12fb179a4d4d6c795bf0a28430" kindref="member">ParaObject::IsHeadOnDisplayShown</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIndex)</highlight></codeline>
<codeline lineno="1373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;IsHeadOnDisplayShown(nIndex);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a1f508c659cbc48aee4e11ebe31dca869" kindref="member">ParaObject::HasHeadOnDisplay</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIndex)</highlight></codeline>
<codeline lineno="1382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;HasHeadOnDisplay(nIndex);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><ref refid="class_para_scripting_1_1_para_param_block" kindref="compound">ParaScripting::ParaParamBlock</ref><sp/><ref refid="class_para_scripting_1_1_para_object_1af8d508babe8ab892189613f34e66f82a" kindref="member">ParaObject::GetEffectParamBlock</ref>()</highlight></codeline>
<codeline lineno="1391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaParamBlock(IsValid()?m_pObj-&gt;GetEffectParamBlock(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>:<sp/>NULL);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a820c489dc7a9dca1800ad1dccd50e541" kindref="member">ParaObject::HasAttachmentPoint</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nAttachmentID<sp/>)</highlight></codeline>
<codeline lineno="1396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;HasAttachmentPoint(nAttachmentID);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a3a575aa89cdb3dddc434ec667d2ddf7a" kindref="member">ParaObject::GetAttachmentPosition</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nAttachmentID,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*z<sp/>)</highlight></codeline>
<codeline lineno="1405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>vPos;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_pObj-&gt;GetAttachmentPosition(vPos,<sp/>nAttachmentID))</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>to<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>vPos.x;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*y<sp/>=<sp/>vPos.y;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*z<sp/>=<sp/>vPos.z;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1afcd7acdb480c2cb875e4e0261f49fd9b" kindref="member">ParaObject::SetAnimation</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nAnimID<sp/>)</highlight></codeline>
<codeline lineno="1420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;SetAnimation(nAnimID);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1ae620e38ba18f2bebe982ee2ee4a3931b" kindref="member">ParaObject::GetAnimation</ref>()</highlight></codeline>
<codeline lineno="1428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;GetAnimation();</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a5b1c5c52cb9a3c11f8e84136041e06b4" kindref="member">ParaObject::SetPhysicsGroup</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nGroup<sp/>)</highlight></codeline>
<codeline lineno="1437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pObj-&gt;SetPhysicsGroup(nGroup);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a95cd72ec7761fa5ed2b56ee14a2710e2" kindref="member">ParaObject::GetPhysicsGroup</ref>()</highlight></codeline>
<codeline lineno="1445"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;GetPhysicsGroup();</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a1db03494d4bb3ca41fddb84cc9b02558" kindref="member">ParaObject::SetSelectGroupIndex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nGroupIndex)</highlight></codeline>
<codeline lineno="1454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGlobals::GetSelectionManager()-&gt;AddObject(</highlight><highlight class="keyword">get</highlight><highlight class="normal">(),<sp/>nGroupIndex);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m_pObj-&gt;SetSelectGroupIndex(nGroupIndex);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a361560321ac40b08c63acc54195cb25a" kindref="member">ParaObject::GetSelectGroupIndex</ref>()</highlight></codeline>
<codeline lineno="1463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pObj-&gt;GetSelectGroupIndex();</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal">luabind::object<sp/><ref refid="class_para_scripting_1_1_para_object_1a5948f577037be5b23231308f85b2d555" kindref="member">ParaObject::GetField</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sFieldname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&amp;<sp/>output<sp/>)</highlight></codeline>
<codeline lineno="1472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaAttributeObject<sp/>att(m_pObj);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>att.GetField(sFieldname,<sp/>output);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a7e4b00c265a9e260ed718caeee88ea89" kindref="member">ParaObject::SetField</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sFieldname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&amp;<sp/>input<sp/>)</highlight></codeline>
<codeline lineno="1478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaAttributeObject<sp/>att(m_pObj);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/>att.SetField(sFieldname,<sp/>input);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1a54cea37ad7f35b76c680af89e746782d" kindref="member">ParaObject::CallField</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sFieldname)</highlight></codeline>
<codeline lineno="1484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaAttributeObject<sp/>att(m_pObj);</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/>att.CallField(sFieldname);</highlight></codeline>
<codeline lineno="1487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal">luabind::object<sp/><ref refid="class_para_scripting_1_1_para_object_1a40ca121fcb5902d724b54f0651e49ee8" kindref="member">ParaObject::GetDynamicField</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sFieldname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&amp;<sp/>output<sp/>)</highlight></codeline>
<codeline lineno="1490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaAttributeObject<sp/>att(m_pObj);</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>att.GetDynamicField(sFieldname,<sp/>output);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object_1abb55a96ae779817363ece0406661b5f9" kindref="member">ParaObject::SetDynamicField</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sFieldname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&amp;<sp/>input<sp/>)</highlight></codeline>
<codeline lineno="1496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaAttributeObject<sp/>att(m_pObj);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/>att.SetDynamicField(sFieldname,<sp/>input);</highlight></codeline>
<codeline lineno="1499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><ref refid="class_para_scripting_1_1_para_object" kindref="compound">ParaScripting::ParaObject</ref><sp/><ref refid="class_para_scripting_1_1_para_object_1a315dd5625007e7218184b9b07c737969" kindref="member">ParaObject::GetObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name)</highlight></codeline>
<codeline lineno="1502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaObject<sp/>obj;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsValid())</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.m_pObj<sp/>=<sp/>m_pObj-&gt;GetChildByName(name);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><ref refid="class_para_scripting_1_1_para_asset_object" kindref="compound">ParaScripting::ParaAssetObject</ref><sp/><ref refid="class_para_scripting_1_1_para_object_1af27f5da8db292aaac2cdf73e31a739b3" kindref="member">ParaObject::GetTexture</ref>()</highlight></codeline>
<codeline lineno="1512"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaAssetObject(IsValid()<sp/>?<sp/>m_pObj-&gt;GetTexture()<sp/>:<sp/>NULL);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ParaScene<sp/>namespace<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="1524"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1a09b5ba4b88bf19e7ba41943c234a025e" kindref="member">ParaScene::TogglePlayer</ref>()</highlight></codeline>
<codeline lineno="1526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(CGlobals::GetScene()-&gt;TogglePlayer());</highlight></codeline>
<codeline lineno="1528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a1c038f189f987549b79a00e4abe6ee42" kindref="member">ParaScene::Execute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strCmd)</highlight></codeline>
<codeline lineno="1531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(</highlight><highlight class="stringliteral">&quot;show<sp/>report&quot;</highlight><highlight class="normal">,<sp/>strCmd)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;SetGenerateReport(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(</highlight><highlight class="stringliteral">&quot;hide<sp/>report&quot;</highlight><highlight class="normal">,<sp/>strCmd)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;SetGenerateReport(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(</highlight><highlight class="stringliteral">&quot;show<sp/>OBB&quot;</highlight><highlight class="normal">,<sp/>strCmd)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;ShowBoundingBox(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(</highlight><highlight class="stringliteral">&quot;hide<sp/>OBB&quot;</highlight><highlight class="normal">,<sp/>strCmd)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;ShowBoundingBox(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1a0077411cf929bef9c1b94bd53764454e" kindref="member">ParaScene::GetNextObject</ref>(ParaObject&amp;<sp/>obj)</highlight></codeline>
<codeline lineno="1551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj.IsCharacter())</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CBipedObject*<sp/>pCur<sp/>=<sp/>obj.<ref refid="class_para_scripting_1_1_para_object_1aac26dfa773ed793946f5723b981259a4" kindref="member">ToCharacter</ref>().m_pCharacter;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CBipedObject*<sp/>pNext<sp/>=<sp/>CGlobals::GetScene()-&gt;GetNextPlayer(pCur);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pNext)</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(pNext);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject();</highlight></codeline>
<codeline lineno="1562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a857fc3ac49720731e445fc1abd02ff02" kindref="member">ParaScene::GetObject_</ref>(ParaObject*<sp/>pOut,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>strObjName)</highlight></codeline>
<codeline lineno="1565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/>*pOut<sp/>=<sp/>GetObject(strObjName);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1a16a79f61e5e0190660db0c3d3cae2195" kindref="member">ParaScene::GetObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>strObjName)</highlight></codeline>
<codeline lineno="1570"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/>CBaseObject<sp/>*<sp/>pObj<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strObjName<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject();</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1577"><highlight class="preprocessor">#define<sp/>MAX_TYPE_LENGTH<sp/><sp/><sp/><sp/><sp/>47</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>_type[MAX_TYPE_LENGTH+1]=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strObjName[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strObjName<sp/>++;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>(*strObjName<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(*strObjName<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(i&lt;MAX_TYPE_LENGTH);i++,<sp/>strObjName++)</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_type[i]<sp/>=<sp/>*strObjName;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*strObjName<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strObjName++;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_type[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_type[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>global<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>CGlobals::GetScene()-&gt;GetGlobalObject(strObjName);</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(_type,<sp/></highlight><highlight class="stringliteral">&quot;player&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>current<sp/>player</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>CGlobals::GetScene()-&gt;GetCurrentPlayer();</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(_type,<sp/></highlight><highlight class="stringliteral">&quot;root&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>CGlobals::GetScene();</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(_type,<sp/></highlight><highlight class="stringliteral">&quot;portal&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>portal<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>CGlobals::GetScene()-&gt;GetPortalNode(strObjName);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(_type,<sp/></highlight><highlight class="stringliteral">&quot;zone&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>zone<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>CGlobals::GetScene()-&gt;GetZoneNode(strObjName);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(_type,<sp/></highlight><highlight class="stringliteral">&quot;managed_loader&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>(CBaseObject*)<sp/>CGlobals::GetScene()-&gt;GetManagedLoader(strObjName);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(_type,<sp/></highlight><highlight class="stringliteral">&quot;NPC&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>global<sp/>non-player<sp/>PC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>CGlobals::GetScene()-&gt;GetRootTile()-&gt;SearchObject(strObjName);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(pObj);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1a99e8604323519e8a4d592ebe9e04df70" kindref="member">ParaScene::GetObject3</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="1630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(CGlobals::GetScene()-&gt;GetLocalObject(Vector3<sp/>(x,y,z)));</highlight></codeline>
<codeline lineno="1632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1633"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1a38ad755d85cbeb81f249838217603561" kindref="member">ParaScene::GetObject4</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fEpsilon)</highlight></codeline>
<codeline lineno="1634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(CGlobals::GetScene()-&gt;GetLocalObject(Vector3<sp/>(x,y,z),<sp/>fEpsilon));</highlight></codeline>
<codeline lineno="1636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><ref refid="class_para_scripting_1_1_para_object" kindref="compound">ParaScripting::ParaObject</ref><sp/><ref refid="class_para_scripting_1_1_para_scene_1a395b7cc09599b5e6aa58a09e20ce6706" kindref="member">ParaScene::GetObject5</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nID<sp/>)</highlight></codeline>
<codeline lineno="1638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(CBaseObject::GetObjectByID(nID));</highlight></codeline>
<codeline lineno="1640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParaScene::CheckExist(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nID)</highlight></codeline>
<codeline lineno="1643"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CBaseObject::GetObjectByID(nID)<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1ad62187324eb1ba383e020056a1880b16" kindref="member">ParaScene::GetPlayer</ref>()</highlight></codeline>
<codeline lineno="1648"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(CGlobals::GetScene()-&gt;GetCurrentPlayer());</highlight></codeline>
<codeline lineno="1650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a75e181141320c2e3b5266eb6128c595e" kindref="member">ParaScene::GetPlayer_</ref>(ParaObject*<sp/>pOut)</highlight></codeline>
<codeline lineno="1652"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/>*pOut<sp/>=<sp/>GetPlayer();</highlight></codeline>
<codeline lineno="1654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a54ad4cf5b139a1ba702e36bd59fd0ba2" kindref="member">ParaScene::CreateWorld</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>sWorldName,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fWorldSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sConfigFile)</highlight></codeline>
<codeline lineno="1656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;SetIdentifier(sWorldName);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDepth<sp/>=<sp/>(int)(log10(<sp/>fWorldSize/128.f<sp/>)/log10(2.f));</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nDepth&lt;2)</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nDepth<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>scene</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;GetRootTile()-&gt;ResetTerrain(fWorldSize/2.f,<sp/>nDepth);</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>current<sp/>world<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>worldDir<sp/>=<sp/>sConfigFile;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/>CParaFile::ToCanonicalFilePath(worldDir,<sp/>worldDir,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/>worldDir<sp/>=<sp/>CParaFile::GetParentDirectoryFromPath(worldDir);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(worldDir.size()&gt;1<sp/>&amp;&amp;<sp/>worldDir[worldDir.size()-1]==</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>the<sp/>trailing<sp/>slash.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worldDir<sp/>=<sp/>worldDir.substr(0,<sp/>worldDir.size()-1);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/>CPathReplaceables::GetSingleton().AddVariable(CPathVariable(</highlight><highlight class="stringliteral">&quot;WORLD&quot;</highlight><highlight class="normal">,<sp/>worldDir,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>terrain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetGlobalTerrain()-&gt;CreateTerrain(sConfigFile);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a617474d0ec9bdb3525fbe534bfce9f2c" kindref="member">ParaScene::Reset</ref>()</highlight></codeline>
<codeline lineno="1680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;ResetScene();</highlight></codeline>
<codeline lineno="1682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a782a4f943aaa7712755ee6f631317929" kindref="member">ParaScene::CreateGlobalTerrain</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fRadius,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nDepth,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sHeightmapfile,<sp/></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fTerrainSize,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fElevscale,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bSwapvertical,<sp/></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/>sMainTextureFile,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sCommonTextureFile,<sp/></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMaxBlockSize,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fDetailThreshold)</highlight></codeline>
<codeline lineno="1688"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;GetRootTile()-&gt;ResetTerrain(fRadius,<sp/>nDepth);</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetGlobalTerrain()-&gt;CreateSingleTerrain(sHeightmapfile,<sp/></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fTerrainSize,<sp/>fElevscale,<sp/>bSwapvertical,<sp/></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sMainTextureFile,<sp/>sCommonTextureFile,<sp/></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nMaxBlockSize,<sp/>fDetailThreshold);</highlight></codeline>
<codeline lineno="1694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a6a7a6a4ba8ba38fe4eeec98d59f2c5d2" kindref="member">ParaScene::Attach</ref>(ParaObject&amp;<sp/>obj)</highlight></codeline>
<codeline lineno="1697"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj.IsValid())</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>anything<sp/>attached<sp/>to<sp/>the<sp/>scene<sp/>via<sp/>script<sp/>set<sp/>it<sp/>to<sp/>modified<sp/>state.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;SetModified(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj.m_pObj-&gt;GetTileContainer()<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>only<sp/>attach<sp/>if<sp/>it<sp/>has<sp/>not<sp/>been<sp/>attached<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;AttachObject(obj.m_pObj);</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>object<sp/>has<sp/>been<sp/>attached<sp/>before,<sp/>detach<sp/>it<sp/>and<sp/>re-attach<sp/>it<sp/>to<sp/>the<sp/>scene.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>will<sp/>update<sp/>the<sp/>physics<sp/>if<sp/>it<sp/>is<sp/>a<sp/>static<sp/>object.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CGlobals::GetScene()-&gt;DetachObject(obj.m_pObj))</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;AttachObject(obj.m_pObj);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>terrain<sp/>content<sp/>modified,<sp/>if<sp/>the<sp/>newly<sp/>attached<sp/>object<sp/>is<sp/>not<sp/>a<sp/>global<sp/>biped<sp/>object.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>this<sp/>is<sp/>just<sp/>one<sp/>automatic<sp/>way<sp/>to<sp/>detect<sp/>terrain<sp/>content<sp/>changes.<sp/>There<sp/>are<sp/>some<sp/>misses,<sp/>such</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>when<sp/>character<sp/>position<sp/>changes<sp/>or<sp/>detached<sp/>from<sp/>the<sp/>scene.Currently<sp/>one<sp/>needs<sp/>to<sp/>manually<sp/>call<sp/>Terrain::SetContentModified().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!CGlobals::IsLoading())</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((!obj.IsCharacter())<sp/>||<sp/>!obj.ToCharacter().m_pCharacter-&gt;IsGlobal())</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>vPos<sp/>=<sp/>obj.m_pObj-&gt;GetPosition();</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CGlobals::GetScene()-&gt;IsPersistent())</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGlobals::GetGlobalTerrain()-&gt;SetContentModified(vPos.x,<sp/>vPos.z,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a7fe8ecdb5be82fd88803b7c1c045a96b" kindref="member">ParaScene::Detach</ref>(ParaObject&amp;<sp/>pObj)</highlight></codeline>
<codeline lineno="1731"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pObj.IsValid())</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;DetachObject(pObj.m_pObj)<sp/>;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a89d06d0f190151c8a35f6402ab3cf1c3" kindref="member">ParaScene::Delete</ref>(ParaObject&amp;<sp/>obj)</highlight></codeline>
<codeline lineno="1738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj.IsValid())</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>terrain<sp/>content<sp/>modified,<sp/>if<sp/>the<sp/>object<sp/>is<sp/>not<sp/>a<sp/>global<sp/>biped<sp/>object.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>this<sp/>is<sp/>just<sp/>one<sp/>automatic<sp/>way<sp/>to<sp/>detect<sp/>terrain<sp/>content<sp/>changes.<sp/>There<sp/>are<sp/>some<sp/>misses,<sp/>such</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>when<sp/>character<sp/>position<sp/>changes<sp/>or<sp/>detached<sp/>from<sp/>the<sp/>scene.Currently<sp/>one<sp/>needs<sp/>to<sp/>manually<sp/>call<sp/>ParaTerrain.SetContentModified().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!CGlobals::IsLoading())</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((!obj.IsCharacter())<sp/>||<sp/>!obj.ToCharacter().m_pCharacter-&gt;IsGlobal())</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>vPos<sp/>=<sp/>obj.m_pObj-&gt;GetPosition();</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CGlobals::GetScene()-&gt;IsPersistent())</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGlobals::GetGlobalTerrain()-&gt;SetContentModified(vPos.x,<sp/>vPos.z,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DELETE_FROM_DB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj.IsPersistent())</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.SetPersistent(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.SaveToDB();</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;DeleteObject(obj.m_pObj);</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.m_pObj<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1aad4755bfa8c4635783c7068e9ba2fe8b" kindref="member">ParaScene::FireMissile</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMissileID,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fSpeed,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fromX,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fromY,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fromZ,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>toX,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>toY,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>toZ)</highlight></codeline>
<codeline lineno="1769"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaAssetObject<sp/>asset(CGlobals::GetAssetManager()-&gt;LoadParaXByID(nMissileID));</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/>FireMissile2(asset,<sp/>fSpeed,<sp/>fromX,<sp/>fromY,<sp/>fromZ,<sp/>toX,<sp/>toY,<sp/>toZ);</highlight></codeline>
<codeline lineno="1772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ParaScene::FireMissile1(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>assetname,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fSpeed,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fromX,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fromY,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fromZ,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>toX,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>toY,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>toZ)</highlight></codeline>
<codeline lineno="1775"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaAssetObject<sp/>asset<sp/>(CGlobals::GetAssetManager()-&gt;LoadParaX(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>assetname));</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/>FireMissile2(asset,<sp/>fSpeed,<sp/>fromX,<sp/>fromY,<sp/>fromZ,<sp/>toX,<sp/>toY,<sp/>toZ);</highlight></codeline>
<codeline lineno="1778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ParaScene::FireMissile2(ParaAssetObject&amp;<sp/>asset,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fSpeed,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fromX,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fromY,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fromZ,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>toX,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>toY,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>toZ)</highlight></codeline>
<codeline lineno="1781"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(asset.IsValid()<sp/>&amp;&amp;<sp/>asset.m_pAsset-&gt;GetType()==AssetEntity::parax)</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>should<sp/>be<sp/>treated<sp/>as<sp/>global<sp/>missile<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMissileObject*<sp/>pMissile<sp/>=<sp/><sp/>CGlobals::GetScene()-&gt;NewMissile();</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pMissile)</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMissile-&gt;InitObject((ParaXEntity*)(asset.m_pAsset),<sp/>DVector3(toX,<sp/>toY,<sp/>toZ),<sp/>fSpeed);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMissile-&gt;SetPosition(DVector3(fromX,<sp/>fromY,<sp/>fromZ));</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUTPUT_LOG(</highlight><highlight class="stringliteral">&quot;failed<sp/>creating<sp/>missile<sp/>object.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1ab0a9febc49910f984215a68a9ff96da4" kindref="member">ParaScene::CreateManagedLoader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>sLoaderName)</highlight></codeline>
<codeline lineno="1799"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaObject<sp/>obj((CBaseObject*)CGlobals::GetScene()-&gt;CreateManagedLoader(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(sLoaderName)));</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="1802"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a6839d5cd4807a1ca4401822e0c69f74b" kindref="member">ParaScene::CreateSkyBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strObjectName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strMeshAssetName,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fScaleX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fScaleY,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fScaleZ,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fHeightOffset)</highlight></codeline>
<codeline lineno="1805"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/>MeshEntity*<sp/>pMesh<sp/>=<sp/><sp/>CGlobals::GetAssetManager()-&gt;GetMesh(strMeshAssetName);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaAssetObject<sp/>obj(pMesh);</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreateSkyBox_(strObjectName,<sp/>obj,<sp/>fScaleX,<sp/>fScaleY,<sp/>fScaleZ,<sp/>fHeightOffset);<sp/></highlight></codeline>
<codeline lineno="1809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParaScene::CreateSkyBox_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strObjectName,<sp/>ParaAssetObject&amp;<sp/>asset,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fScaleX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fScaleY,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fScaleZ,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fHeightOffset)</highlight></codeline>
<codeline lineno="1811"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(asset.IsValid())</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetScene()-&gt;CreateSkyBox(strObjectName,<sp/>*(asset.m_pAsset),<sp/>fScaleX,<sp/>fScaleY,<sp/>fScaleZ,<sp/>fHeightOffset);<sp/><sp/></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a15e65b1f07ce1ba908225d9732cd2f08" kindref="member">ParaScene::DeleteSkyBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strObjectName)</highlight></codeline>
<codeline lineno="1818"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;DeleteSkyBox(strObjectName);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><ref refid="class_para_scripting_1_1_para_object" kindref="compound">ParaScripting::ParaObject</ref><sp/><ref refid="class_para_scripting_1_1_para_scene_1ab63a23a895cc0d97692758324023cecc" kindref="member">ParaScene::CreateVoxelMesh</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strObjectName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sGridFileName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sTextureFileName)</highlight></codeline>
<codeline lineno="1824"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaObject<sp/>obj;</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_DIRECTX_RENDERER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/>CVoxelMesh*<sp/>pObj<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CVoxelMesh();</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/>TextureEntity<sp/>*<sp/>pBaseTexture<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sTextureFileName!=NULL<sp/>&amp;&amp;<sp/><sp/>sTextureFileName[0]!=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBaseTexture<sp/>=<sp/>CGlobals::GetAssetManager()-&gt;LoadTexture(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>sTextureFileName,<sp/>TextureEntity::StaticTexture);</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/>pObj-&gt;InitObject(sGridFileName,<sp/>DVector3(0,0,0),<sp/>pBaseTexture);<sp/></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.m_pObj<sp/>=<sp/>pObj;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><ref refid="class_para_scripting_1_1_para_object" kindref="compound">ParaScripting::ParaObject</ref><sp/><ref refid="class_para_scripting_1_1_para_scene_1a39f9a4b8e0b14a8c3754e162761517fa" kindref="member">ParaScene::CreateZone</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sZoneName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sBoundingVolumes,<sp/></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>depth,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>facing)</highlight></codeline>
<codeline lineno="1842"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaObject<sp/>obj;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/>CZoneNode*<sp/>pObj<sp/>=<sp/>CGlobals::GetScene()-&gt;CreateGetZoneNode(sZoneName);</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pObj)</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetIdentifier(sZoneName);</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetBoundingBox(width,<sp/>height,<sp/>depth,<sp/>facing);</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetZonePlanes(sBoundingVolumes);</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.m_pObj<sp/>=<sp/>pObj;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><ref refid="class_para_scripting_1_1_para_object" kindref="compound">ParaScripting::ParaObject</ref><sp/><ref refid="class_para_scripting_1_1_para_scene_1a2d1247be914de7856a0101ec8110bd9f" kindref="member">ParaScene::CreatePortal</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sPortalName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sHomeZone,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sTargetZone,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sQuadVertices,</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>depth,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>facing)</highlight></codeline>
<codeline lineno="1858"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaObject<sp/>obj;</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/>CPortalNode*<sp/>pObj<sp/>=<sp/>CGlobals::GetScene()-&gt;CreateGetPortalNode(sPortalName);</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pObj)</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetIdentifier(sPortalName);</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetBoundingBox(width,<sp/>height,<sp/>depth,<sp/>facing);</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetPortalPoints(sQuadVertices);</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;<ref refid="class_para_scripting_1_1_para_object_1a6262cd03fa96218a3520dc5791c48ad9" kindref="member">SetHomeZone</ref>(sHomeZone);</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetTargetZone(sTargetZone);</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.m_pObj<sp/>=<sp/>pObj;</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="1873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1a84226806195e65e114698bb72bbbe138" kindref="member">ParaScene::CreateMeshObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strObjectName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strMeshAssetName,<sp/></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOBB_X,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOBB_Y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOBB_Z,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fFacing,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSolid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>localMatrix)</highlight></codeline>
<codeline lineno="1877"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/><sp/>query<sp/>asset<sp/>resources,<sp/>if<sp/>none,<sp/>create<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/>MeshEntity*<sp/>pMesh<sp/>=<sp/><sp/>CGlobals::GetAssetManager()-&gt;GetMesh(strMeshAssetName);</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaAssetObject<sp/>obj(pMesh);</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreateMeshObject(strObjectName,<sp/>obj,<sp/>fOBB_X,<sp/>fOBB_Y,<sp/>fOBB_Z,<sp/>fFacing,<sp/>bSolid,<sp/>localMatrix);</highlight></codeline>
<codeline lineno="1883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1a84226806195e65e114698bb72bbbe138" kindref="member">ParaScene::CreateMeshObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strObjectName,<sp/>ParaAssetObject&amp;<sp/>asset,<sp/></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOBB_X,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOBB_Y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOBB_Z,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fFacing,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSolid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>localMatrix)</highlight></codeline>
<codeline lineno="1887"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaObject<sp/>obj;</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/>MeshEntity*<sp/>pMesh<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(asset.IsValid()<sp/>&amp;&amp;<sp/>asset.m_pAsset-&gt;GetType()<sp/>==<sp/>AssetEntity::mesh)</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMesh<sp/>=<sp/>(MeshEntity*)asset.m_pAsset;</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pMesh)</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>local<sp/>transform<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix4<sp/>mat;<sp/></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sscanf(localMatrix,<sp/></highlight><highlight class="stringliteral">&quot;%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f&quot;</highlight><highlight class="normal">,<sp/>&amp;mat._11,<sp/>&amp;mat._12,<sp/>&amp;mat._13,<sp/>&amp;mat._21,<sp/>&amp;mat._22,<sp/>&amp;mat._23,&amp;mat._31,<sp/>&amp;mat._32,<sp/>&amp;mat._33,&amp;mat._41,<sp/>&amp;mat._42,<sp/>&amp;mat._43)<sp/>&gt;=12)</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat._14<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat._24<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat._34<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat._44<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>=<sp/>Matrix4::IDENTITY;</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMeshObject*<sp/>pObj<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CMeshObject();</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;InitObject(pMesh,<sp/>NULL,<sp/>Vector3(0,0,0));<sp/></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetBoundingBox(fOBB_X,fOBB_Y,<sp/>fOBB_Z,<sp/>fFacing);</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetLocalTransform(mat);</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetMyType(_House);</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*if(bSolid)</highlight></codeline>
<codeline lineno="1918"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1919"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetMyType(_SolidHouse);</highlight></codeline>
<codeline lineno="1920"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1921"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="1922"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1923"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetMyType(_DummyMesh);</highlight></codeline>
<codeline lineno="1924"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.m_pObj<sp/>=<sp/>pObj;</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1ac6ce11e20d60462bfe5c71b1b777a630" kindref="member">ParaScene::CreateLightObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strObjectName,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fPosX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fPosY,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fPosZ,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sLightParams,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>localMatrix)</highlight></codeline>
<codeline lineno="1932"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaObject<sp/>obj;</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_DIRECTX_RENDERER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>local<sp/>transform<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix4<sp/>mat;<sp/></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sscanf(localMatrix,<sp/></highlight><highlight class="stringliteral">&quot;%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f&quot;</highlight><highlight class="normal">,<sp/>&amp;mat._11,<sp/>&amp;mat._12,<sp/>&amp;mat._13,<sp/>&amp;mat._21,<sp/>&amp;mat._22,<sp/>&amp;mat._23,&amp;mat._31,<sp/>&amp;mat._32,<sp/>&amp;mat._33,&amp;mat._41,<sp/>&amp;mat._42,<sp/>&amp;mat._43)<sp/>&gt;=12)</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat._14<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat._24<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat._34<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat._44<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>=<sp/>Matrix4::IDENTITY;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/>CLightObject*<sp/>pObj<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CLightObject();</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sLightParams!=NULL<sp/>&amp;&amp;<sp/>sLightParams[0]!=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLightParam<sp/>lightparam;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightparam.FromString(sLightParams);</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;InitObject(&amp;lightparam,<sp/>NULL,<sp/>Vector3(fPosX,<sp/>fPosY,<sp/>fPosZ),<sp/>mat,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;InitObject(NULL,<sp/>NULL,<sp/>Vector3(fPosX,<sp/>fPosY,<sp/>fPosZ),<sp/>mat,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/>pObj-&gt;SetIdentifier(strObjectName);</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.m_pObj<sp/>=<sp/>pObj;</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="1964"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a0950cc30a2c47bcef096be319b560209" kindref="member">ParaScene::CreateMeshPhysicsObject__</ref>(ParaObject*<sp/>pOut,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strObjectName,<sp/>ParaAssetObject&amp;<sp/>asset,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOBB_X,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOBB_Y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOBB_Z,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bApplyPhysics,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>localMatrix)</highlight></codeline>
<codeline lineno="1967"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/>*pOut<sp/>=<sp/>CreateMeshPhysicsObject(strObjectName,<sp/>asset,<sp/>fOBB_X,<sp/>fOBB_Y,<sp/>fOBB_Z,<sp/>bApplyPhysics,<sp/>localMatrix);</highlight></codeline>
<codeline lineno="1969"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1a27316c06cf8ba1450aaf441050baca1c" kindref="member">ParaScene::CreateMeshPhysicsObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strObjectName,<sp/>ParaAssetObject&amp;<sp/>asset,<sp/></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOBB_X,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOBB_Y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOBB_Z,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bApplyPhysics,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>localMatrix)</highlight></codeline>
<codeline lineno="1973"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaObject<sp/>obj;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/>MeshEntity*<sp/>pMesh<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(asset.IsValid()<sp/>&amp;&amp;<sp/>asset.m_pAsset-&gt;GetType()<sp/>==<sp/>AssetEntity::mesh)</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMesh<sp/>=<sp/>(MeshEntity*)asset.m_pAsset;</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pMesh)</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>local<sp/>transform<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix4<sp/>mat;<sp/></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sscanf(localMatrix,<sp/></highlight><highlight class="stringliteral">&quot;%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f&quot;</highlight><highlight class="normal">,<sp/>&amp;mat._11,<sp/>&amp;mat._12,<sp/>&amp;mat._13,<sp/>&amp;mat._21,<sp/>&amp;mat._22,<sp/>&amp;mat._23,&amp;mat._31,<sp/>&amp;mat._32,<sp/>&amp;mat._33,&amp;mat._41,<sp/>&amp;mat._42,<sp/>&amp;mat._43)<sp/>&gt;=12)</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat._14<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat._24<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat._34<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat._44<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>=<sp/>Matrix4::IDENTITY;</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CMeshPhysicsObject*<sp/>pObj<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CMeshPhysicsObject();</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;InitObject(pMesh,<sp/>fOBB_X,fOBB_Y,<sp/>fOBB_Z,<sp/>bApplyPhysics,<sp/>mat);<sp/></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetIdentifier(strObjectName);</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.m_pObj<sp/>=<sp/>pObj;</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_DIRECTX_RENDERER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(asset.IsValid()<sp/>&amp;&amp;<sp/>asset.m_pAsset-&gt;GetType()<sp/>==<sp/>AssetEntity::cadMesh)</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CadModel*<sp/>pCadModel<sp/>=<sp/>(CadModel*)asset.m_pAsset;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pCadModel)</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix4<sp/>mat;<sp/></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sscanf(localMatrix,<sp/></highlight><highlight class="stringliteral">&quot;%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f,%f&quot;</highlight><highlight class="normal">,<sp/>&amp;mat._11,<sp/>&amp;mat._12,<sp/>&amp;mat._13,<sp/>&amp;mat._21,<sp/>&amp;mat._22,<sp/>&amp;mat._23,&amp;mat._31,<sp/>&amp;mat._32,<sp/>&amp;mat._33,&amp;mat._41,<sp/>&amp;mat._42,<sp/>&amp;mat._43)<sp/>&gt;=12)</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat._14<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat._24<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat._34<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat._44<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mat<sp/>=<sp/>Matrix4::IDENTITY;</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CadModelNode*<sp/>pObj<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CadModelNode();</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;InitObject(pCadModel);</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetBoundingBox(fOBB_X,fOBB_Y,fOBB_Z,0);</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetLocalTransform(mat);</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetIdentifier(strObjectName);</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.m_pObj<sp/>=<sp/>pObj;</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="2036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1a27316c06cf8ba1450aaf441050baca1c" kindref="member">ParaScene::CreateMeshPhysicsObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strObjectName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strMeshAssetName,<sp/></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOBB_X,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOBB_Y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOBB_Z,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bApplyPhysics,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>localMatrix)</highlight></codeline>
<codeline lineno="2040"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/><sp/>query<sp/>asset<sp/>resources,<sp/>if<sp/>none,<sp/>create<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/>MeshEntity*<sp/>pMesh;</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/>pMesh<sp/>=<sp/><sp/>CGlobals::GetAssetManager()-&gt;GetMesh(strMeshAssetName);</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaAssetObject<sp/>obj(pMesh);</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreateMeshPhysicsObject(strObjectName,<sp/>obj,<sp/>fOBB_X,<sp/>fOBB_Y,<sp/>fOBB_Z,<sp/>bApplyPhysics,<sp/>localMatrix);</highlight></codeline>
<codeline lineno="2046"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1a064b5e08ef95cdc3a4a04876e8fca1f3" kindref="member">ParaScene::CreateDynamicPhysicsObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strObjectName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strMeshAssetName,<sp/></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOBB_X,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOBB_Y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOBB_Z,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bRenderMesh)</highlight></codeline>
<codeline lineno="2050"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaObject<sp/>obj;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_DIRECTX_RENDERER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>--<sp/><sp/>query<sp/>asset<sp/>resources,<sp/>if<sp/>none,<sp/>create<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/>MeshEntity*<sp/>pMesh;</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/>pMesh<sp/>=<sp/><sp/>CGlobals::GetAssetManager()-&gt;GetMesh(strMeshAssetName);</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pMesh)</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CDynamicObject*<sp/>pObj<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CDynamicObject();</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;InitObject(pMesh,<sp/>fOBB_X,fOBB_Y,<sp/>fOBB_Z,<sp/>bRenderMesh);<sp/></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetIdentifier(strObjectName);</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.m_pObj<sp/>=<sp/>pObj;</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="2068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a3793c4feeeedcdcffa3468c9128c9a2f" kindref="member">ParaScene::CreateCharacter__</ref>(ParaObject*<sp/>pOut,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strObjectName,<sp/>ParaAssetObject&amp;<sp/>asset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strScript,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bIsGlobal,</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fRadius,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fFacing,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fScaling)</highlight></codeline>
<codeline lineno="2071"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/>*pOut<sp/>=<sp/>CreateCharacter(strObjectName,<sp/>asset,<sp/><sp/>strScript,<sp/>bIsGlobal,<sp/>fRadius,<sp/>fFacing,<sp/>fScaling);</highlight></codeline>
<codeline lineno="2073"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1a71cd753ab52761a7999eac736e263564" kindref="member">ParaScene::CreateCharacter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strObjectName,<sp/>ParaAssetObject&amp;<sp/>asset,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strScript,<sp/></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bIsGlobal,<sp/></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fRadius,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fFacing,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fScaling)</highlight></codeline>
<codeline lineno="2078"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaObject<sp/>obj;</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>whether<sp/>the<sp/>base<sp/>model<sp/>has<sp/>been<sp/>specified<sp/>in<sp/>strMultiAnimationAssetName</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bBaseModelSpecified<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/>AssetEntity*<sp/>pMAE<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(asset.IsValid())</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMAE<sp/>=<sp/>asset.m_pAsset;</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bBaseModelSpecified<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sObjName;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strObjectName<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sObjName<sp/>=<sp/>strObjectName;</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/>obj<sp/>=<sp/>(<ref refid="class_para_scripting_1_1_para_scene_1a16a79f61e5e0190660db0c3d3cae2195" kindref="member">ParaScene::GetObject</ref>(sObjName.c_str()));</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj.IsValid()</highlight><highlight class="comment">/*<sp/>&amp;&amp;<sp/>bIsGlobal*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tmp[256];</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(tmp,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tmp));</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bCollide=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sNewName;</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(bCollide)</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(tmp,<sp/>256,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>ParaEngine::my_rand());</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sNewName<sp/>=<sp/>sObjName+tmp;</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj<sp/>=<sp/>(<ref refid="class_para_scripting_1_1_para_scene_1a16a79f61e5e0190660db0c3d3cae2195" kindref="member">ParaScene::GetObject</ref>(sNewName.c_str()));</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bCollide<sp/>=<sp/>obj.IsValid();</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUTPUT_LOG(</highlight><highlight class="stringliteral">&quot;warning:<sp/>global<sp/>object<sp/>with<sp/>the<sp/>name<sp/>%s<sp/>already<sp/>exists.<sp/>Thus<sp/>a<sp/>new<sp/>object<sp/>named<sp/>%s<sp/>is<sp/>created<sp/>instead.\r\n&quot;</highlight><highlight class="normal">,<sp/>sObjName.c_str(),<sp/>sNewName.c_str());</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sObjName<sp/>=<sp/>sNewName;</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sName<sp/>=<sp/>asset.GetKeyName();</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSize<sp/>=<sp/>(int)sName<sp/>.size();</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nSize<sp/>&gt;<sp/>4<sp/>&amp;&amp;<sp/>sName<sp/>[nSize-4]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>symbol=sName<sp/>[nSize-3];</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(symbol==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>model<sp/>file<sp/>name<sp/>end<sp/>with<sp/>&quot;_s&quot;,<sp/>it<sp/>will<sp/>be<sp/>treated<sp/>as<sp/>static<sp/>and<sp/>local.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bIsGlobal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>simple<sp/>biped<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/>CBipedObject<sp/>*<sp/>pObj<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CBipedObject();</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pObj<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bIsGlobal)</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetMyType(<sp/>_Player<sp/>);</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetAttribute(OBJ_VOLUMN_TILE_VISITOR)<sp/>;</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fRadius<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetAttribute(OBJ_VOLUMN_FREESPACE);</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fRadius<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetMyType(<sp/>_DummyAnimMesh<sp/>);</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetMyType(<sp/>_SolidAnimMesh<sp/>);</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/>pObj-&gt;SetIdentifier(sObjName);</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strScript<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetOnLoadScript(strScript);</highlight><highlight class="comment">//<sp/>associate<sp/>on<sp/>load<sp/>file<sp/>to<sp/>this<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/>pObj-&gt;SetPhysicsRadius(fRadius);</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/>pObj-&gt;SetFacing(fFacing);</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/>pObj-&gt;InitObject(pMAE);</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fScaling!=1.0f)</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetSizeScale(fScaling);</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>any<sp/>newly<sp/>created<sp/>object<sp/>is<sp/>set<sp/>to<sp/>modified.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/>pObj-&gt;SetModified(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/>obj.m_pObj<sp/>=<sp/>pObj;</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="2163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2164"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1a71cd753ab52761a7999eac736e263564" kindref="member">ParaScene::CreateCharacter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strObjectName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strMultiAnimationAssetName,<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strScript,<sp/></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bIsGlobal,<sp/></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fRadius,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fFacing,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fScaling)</highlight></codeline>
<codeline lineno="2167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>whether<sp/>the<sp/>base<sp/>model<sp/>has<sp/>been<sp/>specified<sp/>in<sp/>strMultiAnimationAssetName</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bBaseModelSpecified<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/>AssetEntity*<sp/>pMAE<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strMultiAnimationAssetName<sp/>==<sp/>NULL<sp/>||<sp/>strMultiAnimationAssetName[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bBaseModelSpecified<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pMAE<sp/>=<sp/><sp/>CGlobals::GetAssetManager()-&gt;GetParaX(strMultiAnimationAssetName))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_SUPPORT_MDX_FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((pMAE<sp/>=<sp/><sp/>CGlobals::GetAssetManager()-&gt;GetMDX(strMultiAnimationAssetName))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bBaseModelSpecified<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bBaseModelSpecified<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!bBaseModelSpecified)</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMAE<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaAssetObject<sp/>obj(pMAE);</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreateCharacter(strObjectName,<sp/>obj,<sp/><sp/>strScript,<sp/>bIsGlobal,<sp/>fRadius,<sp/>fFacing,<sp/>fScaling);</highlight></codeline>
<codeline lineno="2191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a9c6ab5c8caf7e570b5039fbf630ed25d" kindref="member">ParaScene::SetFog</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bRenderFog,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strFogColor,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fFogStart,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fFogEnd,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fFogDensity)</highlight></codeline>
<codeline lineno="2194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/>LinearColor<sp/>colorFog;</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sscanf(strFogColor,<sp/></highlight><highlight class="stringliteral">&quot;%f<sp/>%f<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>&amp;colorFog.r,&amp;colorFog.g,&amp;colorFog.b)&lt;3)</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorFog<sp/>=<sp/>LinearColor(1,1,1,1);</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;SetAndRestoreFog(bRenderFog,<sp/>colorFog<sp/>,<sp/>fFogStart<sp/>,<sp/>fFogEnd,<sp/>fFogDensity<sp/>);</highlight></codeline>
<codeline lineno="2199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a36c2e574c91f7a60358bb209353c4b28" kindref="member">ParaScene::EnableLighting</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bEnable)</highlight></codeline>
<codeline lineno="2202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;EnableLight(bEnable);</highlight></codeline>
<codeline lineno="2204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParaScene::IsLightingEnabled()</highlight></codeline>
<codeline lineno="2207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetScene()-&gt;IsLightEnabled();</highlight></codeline>
<codeline lineno="2209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1acab3ab6a4b47ffcb068e7c180a6633ca" kindref="member">ParaScene::SetGlobalWater</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bEnable,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fWaterLevel)</highlight></codeline>
<codeline lineno="2212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CGlobals::GetOceanManager())</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGlobals::GetOceanManager()-&gt;SetGlobalWater(bEnable,<sp/>fWaterLevel);</highlight></codeline>
<codeline lineno="2215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1af341cec96ec32cb01fd0fb74bc6a1f02" kindref="member">ParaScene::GetGlobalWaterLevel</ref>()</highlight></codeline>
<codeline lineno="2218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CGlobals::GetOceanManager())</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetOceanManager()-&gt;GetWaterLevel();</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.f;</highlight></codeline>
<codeline lineno="2222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"></highlight></codeline>
<codeline lineno="2224"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1aa29b70db1e83c1f34cf97452526bd45e" kindref="member">ParaScene::IsGlobalWaterEnabled</ref>()</highlight></codeline>
<codeline lineno="2225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CGlobals::GetOceanManager())</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetOceanManager()-&gt;OceanEnabled();</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1ad8d8221a4c43a1d1b7967c2487ff89e8" kindref="member">ParaScene::AddWaterRipple</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="2232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CGlobals::GetOceanManager())</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetOceanManager()-&gt;AddRipple(Vector3(x,y,z));</highlight></codeline>
<codeline lineno="2235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1adf5422ad89255d68060d9e466aa57b87" kindref="member">ParaScene::SetShadowMethod</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nMethod)</highlight></codeline>
<codeline lineno="2238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;SetShadow(nMethod&gt;0);</highlight></codeline>
<codeline lineno="2240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ParaScene::GetShadowMethod()</highlight></codeline>
<codeline lineno="2243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetScene()-&gt;IsShadowMapEnabled()?<sp/>1:0;</highlight></codeline>
<codeline lineno="2245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1ad95921ab2655cd08126271ff86043852" kindref="member">ParaScene::Play3DSound</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strSoundAssetName,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fY,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fZ)</highlight></codeline>
<codeline lineno="2248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a4476397568ae4840c9bafda2f3a21e71" kindref="member">ParaScene::SelectObject</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nGroupIndex,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sFilterFunc<sp/>)</highlight></codeline>
<codeline lineno="2253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/>CShapeSphere<sp/>circle(Vector3(x,y,z),<sp/>radius);</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetScene()-&gt;SelectObject(nGroupIndex,<sp/>circle,<sp/>GetFilterFuncByName(sFilterFunc));</highlight></codeline>
<codeline lineno="2256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a8393b329492a0127f651f1e06c7f649a" kindref="member">ParaScene::SelectObject1</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nGroupIndex,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z1,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x2,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fRotY,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sFilterFunc<sp/>)</highlight></codeline>
<codeline lineno="2259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/>CShapeOBB<sp/>obb;</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector3<sp/>v1(x1,y1,z1);</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector3<sp/>v2(x2,y2,z2);</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/>obb.mCenter<sp/>=<sp/>(v1<sp/>+<sp/>v2)/2;</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fHalfDiagonalDist<sp/>=<sp/>Vector2(v1.x-v2.x,<sp/>v1.z-v2.z).length()/2;</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/>obb.mExtents<sp/>=<sp/>Vector3(fabs(fHalfDiagonalDist*cos(fRotY)),<sp/>fabs((y1-y2)/2),<sp/>fabs(fHalfDiagonalDist*sin(fRotY)));</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaMatrixRotationY(&amp;(obb.mRot),<sp/>fRotY);</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetScene()-&gt;SelectObject(nGroupIndex,<sp/>obb,<sp/>GetFilterFuncByName(sFilterFunc));</highlight></codeline>
<codeline lineno="2269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1af252dbefa4375fc1ae22d218128d8d84" kindref="member">ParaScene::MousePick</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fMaxDistance,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sFilterFunc)</highlight></codeline>
<codeline lineno="2272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!CGlobals::GetGUI()-&gt;GetMouseInClient())</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(NULL);</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,y;</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetGUI()-&gt;GetMousePosition(&amp;(x),<sp/>&amp;(y));</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/>POINT<sp/>ptCursor;</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/>ptCursor.x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/>ptCursor.y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>0<sp/>||<sp/>y<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(NULL);</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/>CBaseObject*<sp/>pObj=NULL;</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/>OBJECT_FILTER_CALLBACK<sp/>pFilterFunc<sp/>=<sp/>GetFilterFuncByName(sFilterFunc);</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(sFilterFunc,<sp/></highlight><highlight class="stringliteral">&quot;point&quot;</highlight><highlight class="normal">)==0<sp/>||<sp/>strcmp(sFilterFunc,<sp/></highlight><highlight class="stringliteral">&quot;walkpoint&quot;</highlight><highlight class="normal">)==0<sp/>||<sp/>strcmp(sFilterFunc,<sp/></highlight><highlight class="stringliteral">&quot;terrain&quot;</highlight><highlight class="normal">)==0)</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CSphereObject<sp/>obj;</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>vIntersectPos(0,0,0);</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fDist<sp/>=<sp/>CGlobals::GetScene()-&gt;PickClosest(ptCursor.x,<sp/>ptCursor.y,<sp/>&amp;pObj,<sp/>&amp;vIntersectPos,<sp/>NULL,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>fMaxDistance,<sp/><ref refid="namespace_para_scripting_1a22005d59cfab951409e57bf47856fc3b" kindref="member">GetPhysicsGroupMaskByName</ref>(sFilterFunc));</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fDist&lt;0)</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(NULL);</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>can<sp/>retrieve<sp/>the<sp/>intersection<sp/>point<sp/>and<sp/>distance<sp/>by<sp/>position<sp/>and<sp/>scaling.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.SetPosition(DVector3(vIntersectPos));</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.SetScaling(fDist);</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.SetIdentifier(pObj<sp/>?<sp/>pObj-&gt;GetIdentifier()<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(&amp;obj);</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;PickObject(ptCursor.x,<sp/>ptCursor.y,<sp/>&amp;pObj,<sp/>fMaxDistance,<sp/>pFilterFunc);</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(pObj);</highlight></codeline>
<codeline lineno="2307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1ad3c4766ed4f580910089636977372014" kindref="member">ParaScene::RegisterEvent1</ref>(DWORD<sp/>nEventType,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sScript)</highlight></codeline>
<codeline lineno="2310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetEventsCenter()-&gt;RegisterEvent(nEventType,<sp/>sID,<sp/>sScript);</highlight></codeline>
<codeline lineno="2312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1ac489d684374e7cc264b926ea83bf7efc" kindref="member">ParaScene::RegisterEvent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sScript)</highlight></codeline>
<codeline lineno="2315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetEventsCenter()-&gt;RegisterEvent(sID,<sp/>sScript);</highlight></codeline>
<codeline lineno="2317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a5241ecd5ffcc68f3fb4e6bd93922101b" kindref="member">ParaScene::UnregisterEvent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sID)</highlight></codeline>
<codeline lineno="2320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetEventsCenter()-&gt;UnregisterEvent(sID);</highlight></codeline>
<codeline lineno="2322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a09564da8ebac31e2100798cf08434af2" kindref="member">ParaScene::UnregisterAllEvent</ref>()</highlight></codeline>
<codeline lineno="2325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CGlobals::GetEventsCenter()-&gt;UnregisterAllEvent();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetEventsCenter()-&gt;Reset();</highlight></codeline>
<codeline lineno="2328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a24888e4d6dcd803a31b7f27249a12c77" kindref="member">ParaScene::EnableMouseClick</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bEnable)</highlight></codeline>
<codeline lineno="2331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;EnableMouseEvent(bEnable);</highlight></codeline>
<codeline lineno="2333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a761d104c4b8c7154387bf820ac430a29" kindref="member">ParaScene::SetTimeOfDay</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>time)</highlight></codeline>
<codeline lineno="2336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;GetSunLight().SetTimeOfDay(time);</highlight></codeline>
<codeline lineno="2338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a271496ce45746e28745b3e5da1f31b82" kindref="member">ParaScene::GetTimeOfDay</ref>()</highlight></codeline>
<codeline lineno="2341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetScene()-&gt;GetSunLight().GetTimeOfDay();</highlight></codeline>
<codeline lineno="2343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1ad99a0d8c87b822a503a09e625557c05c" kindref="member">ParaScene::SetTimeOfDaySTD</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>time)</highlight></codeline>
<codeline lineno="2346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;GetSunLight().SetTimeOfDaySTD(time);</highlight></codeline>
<codeline lineno="2348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a58d7829ebfcd31ae3564777d61fbdaf3" kindref="member">ParaScene::GetTimeOfDaySTD</ref>()</highlight></codeline>
<codeline lineno="2351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetScene()-&gt;GetSunLight().GetTimeOfDaySTD();</highlight></codeline>
<codeline lineno="2353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"></highlight></codeline>
<codeline lineno="2355"><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a2cbb3dc2a1db7442041203e2e8e5c32a" kindref="member">ParaScene::SetMaximumAngle</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fMaxAngle)</highlight></codeline>
<codeline lineno="2357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;GetSunLight().SetMaximumAngle(fMaxAngle);</highlight></codeline>
<codeline lineno="2359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"></highlight></codeline>
<codeline lineno="2361"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a1fff58eaa9841dd0f31eb8f5e041afd8" kindref="member">ParaScene::AdvanceTimeOfDay</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeDelta)</highlight></codeline>
<codeline lineno="2362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetScene()-&gt;GetSunLight().AdvanceTimeOfDay(timeDelta);</highlight></codeline>
<codeline lineno="2364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1aa3d23bbf1c79044770041e7a6d0094d2" kindref="member">ParaScene::SetDayLength</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fMinutes)</highlight></codeline>
<codeline lineno="2367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;GetSunLight().SetDayLength(fMinutes);</highlight></codeline>
<codeline lineno="2369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a84563ac147c55a9bb859a48d2532abe9" kindref="member">ParaScene::GetDayLength</ref>()</highlight></codeline>
<codeline lineno="2372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetScene()-&gt;GetSunLight().GetDayLength();</highlight></codeline>
<codeline lineno="2374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1ac516e539e8493518e74dc44fd51f101c" kindref="member">ParaScene::GetCurrentActor</ref>()</highlight></codeline>
<codeline lineno="2377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(CGlobals::GetScene()-&gt;GetCurrentActor());</highlight></codeline>
<codeline lineno="2379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a75637a7c72500ca43bc12e8540958857" kindref="member">ParaScene::SetCurrentActor</ref>(ParaObject<sp/>actor)</highlight></codeline>
<codeline lineno="2382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;SetCurrentActor(actor.m_pObj);</highlight></codeline>
<codeline lineno="2384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a648b812dfad6a9b48efb9a1908f7a027" kindref="member">ParaScene::SetModified</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bModified)</highlight></codeline>
<codeline lineno="2386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;SetModified(bModified);</highlight></codeline>
<codeline lineno="2388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a8810ef3c569758398c3cf549fcdcf3ef" kindref="member">ParaScene::IsModified</ref>()</highlight></codeline>
<codeline lineno="2391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetScene()-&gt;IsModified();</highlight></codeline>
<codeline lineno="2393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal">ParaAttributeObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1a04a69b1b68c9c967d7ee14d1e21023d1" kindref="member">ParaScene::GetAttributeObject</ref>()</highlight></codeline>
<codeline lineno="2396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaAttributeObject(CGlobals::GetScene());</highlight></codeline>
<codeline lineno="2398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><ref refid="class_para_scripting_1_1_para_attribute_object" kindref="compound">ParaScripting::ParaAttributeObject</ref><sp/>ParaScene::GetAttributeObject1(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name)</highlight></codeline>
<codeline lineno="2401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaAttributeObject(CGlobals::GetScene()-&gt;GetChildByName(name));</highlight></codeline>
<codeline lineno="2403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1af7c4fa19f7c108ead1095585e6b53ed5" kindref="member">ParaScene::GetAttributeObject_</ref>(ParaAttributeObject&amp;<sp/>output)</highlight></codeline>
<codeline lineno="2406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>GetAttributeObject();</highlight></codeline>
<codeline lineno="2408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"></highlight></codeline>
<codeline lineno="2410"><highlight class="normal">ParaAttributeObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1af64c1571a338d393516bd97d03d0f921" kindref="member">ParaScene::GetAttributeObjectSky</ref>()</highlight></codeline>
<codeline lineno="2411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaAttributeObject(CGlobals::GetScene()-&gt;GetCurrentSky());</highlight></codeline>
<codeline lineno="2413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1ad8231159da2c7be9b959049726d70d57" kindref="member">ParaScene::GetAttributeObjectSky_</ref>(ParaAttributeObject&amp;<sp/>output)</highlight></codeline>
<codeline lineno="2416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>GetAttributeObjectSky();</highlight></codeline>
<codeline lineno="2418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2419"><highlight class="normal">ParaAttributeObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1a76297d7a1a07fea6750782e02a8acaf6" kindref="member">ParaScene::GetAttributeObjectPlayer</ref>()</highlight></codeline>
<codeline lineno="2420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaAttributeObject(CGlobals::GetScene()-&gt;GetCurrentPlayer());</highlight></codeline>
<codeline lineno="2422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a08938aa24ffbd3ecc7e8394d91a21161" kindref="member">ParaScene::GetAttributeObjectPlayer_</ref>(ParaAttributeObject&amp;<sp/>output)</highlight></codeline>
<codeline lineno="2424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>GetAttributeObjectPlayer();</highlight></codeline>
<codeline lineno="2426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal">ParaAttributeObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1a5e85601385bd5a3b6eaebbb9645ff97e" kindref="member">ParaScene::GetAttributeObjectOcean</ref>()</highlight></codeline>
<codeline lineno="2429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaAttributeObject((IAttributeFields*)CGlobals::GetOceanManager());</highlight></codeline>
<codeline lineno="2431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a83c6b8bbcd9a9e69c62bba1fbf5b4e78" kindref="member">ParaScene::GetAttributeObjectOcean_</ref>(ParaAttributeObject<sp/>&amp;<sp/>output)</highlight></codeline>
<codeline lineno="2434"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>GetAttributeObjectOcean();</highlight></codeline>
<codeline lineno="2436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"></highlight></codeline>
<codeline lineno="2438"><highlight class="normal">ParaAttributeObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1a2daaa6642a460e0096c735e4b14183a4" kindref="member">ParaScene::GetAttributeObjectSunLight</ref>()</highlight></codeline>
<codeline lineno="2439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaAttributeObject(&amp;(CGlobals::GetScene()-&gt;GetSunLight()));</highlight></codeline>
<codeline lineno="2441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"></highlight></codeline>
<codeline lineno="2443"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a7ee13d77c952c229e04d67a3b5c6fe8b" kindref="member">ParaScene::GetAttributeObjectSunLight_</ref>(ParaAttributeObject&amp;<sp/>output)</highlight></codeline>
<codeline lineno="2444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>GetAttributeObjectSunLight();</highlight></codeline>
<codeline lineno="2446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"></highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1abbd9654a51a90b40e9002220f44e2ac7" kindref="member">ParaScene::UpdateOcean</ref>()</highlight></codeline>
<codeline lineno="2449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;UpdateOcean();</highlight></codeline>
<codeline lineno="2451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_scene_1aac70e25953f2e7c241c6d187bf71a602" kindref="member">ParaScene::GetObjectByViewBox</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&amp;<sp/>viewbox<sp/>)</highlight></codeline>
<codeline lineno="2454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/>CBaseObject*<sp/>pObj<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(type(viewbox)<sp/>==<sp/>LUA_TTABLE)</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>vPos;</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fOBB_X,<sp/>fOBB_Y,<sp/>fOBB_Z;</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>object_cast_checkNumber(x)<sp/><sp/><sp/>((type(x)==LUA_TNUMBER)<sp/>?<sp/>(object_cast&lt;float&gt;(x))<sp/>:<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vPos.x<sp/>=<sp/>object_cast_checkNumber(viewbox[</highlight><highlight class="stringliteral">&quot;pos_x&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vPos.y<sp/>=<sp/>object_cast_checkNumber(viewbox[</highlight><highlight class="stringliteral">&quot;pos_y&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vPos.z<sp/>=<sp/>object_cast_checkNumber(viewbox[</highlight><highlight class="stringliteral">&quot;pos_z&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fOBB_X<sp/>=<sp/>object_cast_checkNumber(viewbox[</highlight><highlight class="stringliteral">&quot;obb_x&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fOBB_Y<sp/>=<sp/>object_cast_checkNumber(viewbox[</highlight><highlight class="stringliteral">&quot;obb_y&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fOBB_Z<sp/>=<sp/>object_cast_checkNumber(viewbox[</highlight><highlight class="stringliteral">&quot;obb_z&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CShapeAABB<sp/>aabb(Vector3(vPos.x,<sp/>vPos.y,<sp/>vPos.z),<sp/>Vector3(fOBB_X/2,<sp/>fOBB_Y/2,<sp/>fOBB_Z/2));</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj<sp/>=<sp/>CGlobals::GetScene()-&gt;GetObjectByViewBox(aabb);</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(pObj);</highlight></codeline>
<codeline lineno="2479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"></highlight></codeline>
<codeline lineno="2481"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1afffa243256a6b611a84dd235798fdb99" kindref="member">ParaScene::GetActionMeshesBySphere</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&amp;<sp/>inout,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius)</highlight></codeline>
<codeline lineno="2482"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetObjectsBySphere(inout,<sp/>x,y,z,radius,<sp/></highlight><highlight class="stringliteral">&quot;actionmesh&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1ae245bd8fff57227fb666ce8beebf631f" kindref="member">ParaScene::GetObjectsByScreenRect</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&amp;<sp/>inout,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sFilterFunc,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fMaxDistance<sp/>)</highlight></codeline>
<codeline lineno="2487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/>OBJECT_FILTER_CALLBACK<sp/>pFilterFunc<sp/>=<sp/>GetFilterFuncByName(sFilterFunc);</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/>list&lt;CBaseObject*&gt;<sp/>output;</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/>RECT<sp/>rect<sp/>=<sp/>{left,<sp/>top,<sp/>right,<sp/>bottom};</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCount<sp/>=<sp/>CGlobals::GetScene()-&gt;GetObjectsByScreenRect(output,<sp/>rect,<sp/>pFilterFunc,<sp/>fMaxDistance);</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nCount&gt;0)</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list&lt;CBaseObject*&gt;::iterator<sp/>itCur,<sp/>itEnd<sp/>=<sp/>output.end();</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(itCur<sp/>=<sp/>output.begin();<sp/>itCur!=itEnd;<sp/>++itCur)</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inout[i]<sp/>=<sp/>ParaObject(*itCur);</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nCount;</highlight></codeline>
<codeline lineno="2505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"></highlight></codeline>
<codeline lineno="2507"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a9d5b4b5bb5318f0ffdc7d689706b3233" kindref="member">ParaScene::GetObjectsBySphere</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&amp;<sp/>inout,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sFilterFunc<sp/>)</highlight></codeline>
<codeline lineno="2508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/>OBJECT_FILTER_CALLBACK<sp/>pFilterFunc<sp/>=<sp/>GetFilterFuncByName(sFilterFunc);</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/>list&lt;CBaseObject*&gt;<sp/>output;</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/>CShapeSphere<sp/>sphere(Vector3(x,y,z),<sp/>radius);</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCount<sp/>=<sp/>CGlobals::GetScene()-&gt;GetObjectsBySphere(output,<sp/>sphere,<sp/>pFilterFunc);</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nCount&gt;0)</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list&lt;CBaseObject*&gt;::iterator<sp/>itCur,<sp/>itEnd<sp/>=<sp/>output.end();</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(itCur<sp/>=<sp/>output.begin();<sp/>itCur!=itEnd;<sp/>++itCur)</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inout[i]<sp/>=<sp/>ParaObject(*itCur);</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nCount;</highlight></codeline>
<codeline lineno="2525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"></highlight></codeline>
<codeline lineno="2527"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1af7224b67adeaff54052e0988d23d26d0" kindref="member">ParaScene::OnTerrainChanged</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fRadius<sp/>)</highlight></codeline>
<codeline lineno="2528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;OnTerrainChanged(Vector3(x,0,y),<sp/>fRadius);</highlight></codeline>
<codeline lineno="2530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"></highlight></codeline>
<codeline lineno="2532"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a456b6dff8ecc09fcdfb4a294aef5e944" kindref="member">ParaScene::IsScenePaused</ref>()</highlight></codeline>
<codeline lineno="2533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetScene()-&gt;IsScenePaused();</highlight></codeline>
<codeline lineno="2535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a89c583df9245763b40fd53b91f68c4a1" kindref="member">ParaScene::PauseScene</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bEnable<sp/>)</highlight></codeline>
<codeline lineno="2538"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;PauseScene(bEnable);</highlight></codeline>
<codeline lineno="2540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"></highlight></codeline>
<codeline lineno="2542"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1ae5b780337c7d6947a8c2687296d97889" kindref="member">ParaScene::IsSceneEnabled</ref>()</highlight></codeline>
<codeline lineno="2543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetScene()-&gt;IsSceneEnabled();</highlight></codeline>
<codeline lineno="2545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"></highlight></codeline>
<codeline lineno="2547"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a1dbe2acb93a67ce8dfdcf2877aa9541f" kindref="member">ParaScene::EnableScene</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bEnable<sp/>)</highlight></codeline>
<codeline lineno="2548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;EnableScene(bEnable);</highlight></codeline>
<codeline lineno="2550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a41ed3e640e01e86b55b9f06a6b5f1eeb" kindref="member">ParaScene::SaveAllCharacters</ref>()</highlight></codeline>
<codeline lineno="2553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetScene()-&gt;SaveAllCharacters();</highlight></codeline>
<codeline lineno="2555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><ref refid="class_para_scripting_1_1_para_mini_scene_graph" kindref="compound">ParaScripting::ParaMiniSceneGraph</ref><sp/><ref refid="class_para_scripting_1_1_para_scene_1a4df92e71448c52569a5e893cace42135" kindref="member">ParaScene::GetPostProcessingScene</ref>()</highlight></codeline>
<codeline lineno="2558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaMiniSceneGraph(<sp/>CGlobals::GetScene()-&gt;GetPostProcessingScene());</highlight></codeline>
<codeline lineno="2560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a131b20cfddc9a6a03c5d9027b9d12a12" kindref="member">ParaScene::EnablePostProcessing</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bEnable<sp/>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sCallbackScript)</highlight></codeline>
<codeline lineno="2563"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;EnablePostProcessing(bEnable,<sp/>sCallbackScript);</highlight></codeline>
<codeline lineno="2565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"></highlight></codeline>
<codeline lineno="2567"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1aa4bf2c080fa159d86341204c25e54517" kindref="member">ParaScene::IsPostProcessingEnabled</ref>()</highlight></codeline>
<codeline lineno="2568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetScene()-&gt;IsPostProcessingEnabled();</highlight></codeline>
<codeline lineno="2570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><ref refid="class_para_scripting_1_1_para_mini_scene_graph" kindref="compound">ParaScripting::ParaMiniSceneGraph</ref><sp/><ref refid="class_para_scripting_1_1_para_scene_1a0b814e2605cdc352178bb931d6721a11" kindref="member">ParaScene::GetMiniSceneGraph</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name<sp/>)</highlight></codeline>
<codeline lineno="2573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(name!=0)</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaMiniSceneGraph(<sp/>CGlobals::GetScene()-&gt;GetMiniSceneGraph(name));</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaMiniSceneGraph(NULL);</highlight></codeline>
<codeline lineno="2579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"></highlight></codeline>
<codeline lineno="2581"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a8d210fb17638bc45b643299e5346b800" kindref="member">ParaScene::DeleteMiniSceneGraph</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name<sp/>)</highlight></codeline>
<codeline lineno="2582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(name!=0)</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetScene()-&gt;DeleteMiniSceneGraph(name);</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a542adac33eebf29f69fe82a08fc1e464" kindref="member">ParaScene::EnableMiniSceneGraph</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bEnable<sp/>)</highlight></codeline>
<codeline lineno="2590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;EnableMiniSceneGraph(bEnable);</highlight></codeline>
<codeline lineno="2592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"></highlight></codeline>
<codeline lineno="2594"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1adf338c7878236492802f7e7bdce7893c" kindref="member">ParaScene::IsMiniSceneGraphEnabled</ref>()</highlight></codeline>
<codeline lineno="2595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetScene()-&gt;IsMiniSceneGraphEnabled();</highlight></codeline>
<codeline lineno="2597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"></highlight></codeline>
<codeline lineno="2599"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1ae9bbfa96bb54807bb14d1f0c968ec9ba" kindref="member">ParaScene::ShowHeadOnDisplay</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bShow<sp/>)</highlight></codeline>
<codeline lineno="2600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;ShowHeadOnDisplay(bShow);</highlight></codeline>
<codeline lineno="2602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"></highlight></codeline>
<codeline lineno="2604"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a9bee17d9f4720955e283928bea14d706" kindref="member">ParaScene::IsHeadOnDisplayShown</ref>()</highlight></codeline>
<codeline lineno="2605"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetScene()-&gt;IsHeadOnDisplayShown();</highlight></codeline>
<codeline lineno="2607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"></highlight></codeline>
<codeline lineno="2609"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a9285b575edb2ae782fe8d2850acbd778" kindref="member">ParaScene::GetMaxRenderCount</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRenderImportance)</highlight></codeline>
<codeline lineno="2610"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetScene()-&gt;GetMaxRenderCount(nRenderImportance);</highlight></codeline>
<codeline lineno="2612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"></highlight></codeline>
<codeline lineno="2614"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a32fd1d9b204730135c9a35eb80bba305" kindref="member">ParaScene::SetMaxRenderCount</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRenderImportance,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCount)</highlight></codeline>
<codeline lineno="2615"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;SetMaxRenderCount(nRenderImportance,<sp/>nCount);</highlight></codeline>
<codeline lineno="2617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"></highlight></codeline>
<codeline lineno="2619"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a9553b812f16971812f015062b75bb1cc" kindref="member">ParaScene::GetScreenPosFrom3DPoint</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">&amp;<sp/>output)</highlight></codeline>
<codeline lineno="2620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bVisible<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector3<sp/>vPos(x,y,z);</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector3<sp/>vEyePos<sp/>=<sp/><sp/>CGlobals::GetScene()-&gt;GetCurrentCamera()-&gt;GetEyePosition();</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fDist<sp/>=<sp/>(vEyePos-vPos).squaredLength();</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fDist&gt;0.01f)</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fDist<sp/>=<sp/>sqrt(fDist);</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/>output[</highlight><highlight class="stringliteral">&quot;distance&quot;</highlight><highlight class="normal">]<sp/>=<sp/>fDist;</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"></highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/>vPos<sp/>-=<sp/>CGlobals::GetScene()-&gt;GetRenderOrigin();</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CGlobals::GetScene()-&gt;GetCurrentCamera()-&gt;GetObjectFrustum()-&gt;CullPointsWithFrustum(&amp;vPos,<sp/>1))</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bVisible<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>vOut;</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParaViewport<sp/><sp/>viewport;</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGlobals::GetViewportManager()-&gt;GetCurrentViewport(viewport);</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParaVec3Project(&amp;vOut,<sp/>&amp;vPos,<sp/>&amp;viewport,<sp/>CGUIRoot::GetInstance()-&gt;Get3DViewProjMatrix(),<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[</highlight><highlight class="stringliteral">&quot;visible&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scale<sp/>by<sp/>UI<sp/>scaling.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">]<sp/>=<sp/>vOut.x<sp/>/<sp/>CGUIRoot::GetInstance()-&gt;GetUIScalingX();</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">]<sp/>=<sp/>vOut.y<sp/>/<sp/>CGUIRoot::GetInstance()-&gt;GetUIScalingY();</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output[</highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">]<sp/>=<sp/>vOut.z;</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>bVisible;</highlight></codeline>
<codeline lineno="2648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"></highlight></codeline>
<codeline lineno="2650"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1aa23523ad6c65c90784f7dfa739291f67" kindref="member">ParaScene::LoadNPCsByRegion</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_z,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_z,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bReload<sp/>)</highlight></codeline>
<codeline lineno="2651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector3<sp/>vMin(min_x,<sp/>min_y,<sp/>min_z);</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector3<sp/>vMax(max_x,<sp/>max_y,<sp/>max_z);</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetScene()-&gt;DB_LoadNPCsByRegion(vMin,<sp/>vMax,<sp/>bReload);</highlight></codeline>
<codeline lineno="2655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"></highlight></codeline>
<codeline lineno="2657"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a34ae981a68d9c512558e401d0e5c4415" kindref="member">ParaScene::SetCharacterRegionPath</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slot,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path)</highlight></codeline>
<codeline lineno="2658"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_para_engine" kindref="compound">ParaEngine</ref>;</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaEngine::CCharCustomizeSysSetting::GetSingleton().SetCharacterRegionPath(slot,<sp/>path);</highlight></codeline>
<codeline lineno="2661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1acade1878d456476ee47f84b94c208a0e" kindref="member">ParaScene::SetCharTextureSize</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCharacterTexSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCartoonFaceTexSize<sp/>)</highlight></codeline>
<codeline lineno="2664"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaEngine::CCharCustomizeSysSetting::GetSingleton().SetCharTextureSize(nCharacterTexSize,<sp/>nCartoonFaceTexSize);</highlight></codeline>
<codeline lineno="2666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"></highlight></codeline>
<codeline lineno="2668"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_scene_1a2cb26e779ca0a3390020286a1bcf6b2f" kindref="member">ParaScene::SetCharRegionCoordinates</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRegionIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xpos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ypos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xsize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ysize<sp/>)</highlight></codeline>
<codeline lineno="2669"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaEngine::CCharCustomizeSysSetting::GetSingleton().SetCharRegionCoordinates(nRegionIndex,<sp/>xpos,<sp/>ypos,<sp/>xsize,<sp/>ysize);</highlight></codeline>
<codeline lineno="2671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"></highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><ref refid="class_para_scripting_1_1_para_object" kindref="compound">ParaScripting::ParaObject</ref><sp/><ref refid="class_para_scripting_1_1_para_scene_1a0e8341a4aa64a64838b607b7e7a0f119" kindref="member">ParaScene::CreateObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strType,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>strObjectName,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="2674"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/>CBaseObject*<sp/>pObj<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">CBaseObject*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(CAttributesManager::GetSingleton().CreateObject(strType));</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pObj)</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetIdentifier(strObjectName);</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DVector3<sp/>vPos(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pObj-&gt;SetPosition(vPos);</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(pObj);</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OUTPUT_LOG(</highlight><highlight class="stringliteral">&quot;warning:<sp/>failed<sp/>to<sp/>create<sp/>unregistered<sp/>object<sp/>of<sp/>type<sp/>%s<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>strType);</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject();</highlight></codeline>
<codeline lineno="2688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>ParaCamera<sp/>namespace<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2693"><highlight class="normal">ParaAttributeObject<sp/><ref refid="class_para_scripting_1_1_para_camera_1a7711e9264e547d5b9db69206984b36e8" kindref="member">ParaCamera::GetAttributeObject</ref>()</highlight></codeline>
<codeline lineno="2694"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaAttributeObject(CGlobals::GetScene()-&gt;GetCurrentCamera());</highlight></codeline>
<codeline lineno="2696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_camera_1a0e5d27e64e91ba0311450bb860501ca9" kindref="member">ParaCamera::GetAttributeObject_</ref>(ParaAttributeObject&amp;<sp/>output)</highlight></codeline>
<codeline lineno="2698"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>GetAttributeObject();</highlight></codeline>
<codeline lineno="2700"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_camera_1ae031bf397ff70b38b1b84b39f6b8f4e5" kindref="member">ParaCamera::FollowObject</ref>(ParaObject<sp/>obj)</highlight></codeline>
<codeline lineno="2702"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj.m_pObj)</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj.m_pObj-&gt;IsBiped())</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;SetCurrentPlayer((CBipedObject*)obj.m_pObj);</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((CAutoCamera*)(CGlobals::GetScene()-&gt;GetCurrentCamera()))-&gt;SetFollowTarget(obj.m_pObj);</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"></highlight></codeline>
<codeline lineno="2711"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_camera_1ae031bf397ff70b38b1b84b39f6b8f4e5" kindref="member">ParaCamera::FollowObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strObjectName)</highlight></codeline>
<codeline lineno="2712"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaObject<sp/>obj<sp/>=<sp/>(<ref refid="class_para_scripting_1_1_para_scene_1a16a79f61e5e0190660db0c3d3cae2195" kindref="member">ParaScene::GetObject</ref>(strObjectName));</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/>FollowObject(obj);</highlight></codeline>
<codeline lineno="2715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"></highlight></codeline>
<codeline lineno="2717"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_camera_1a836f40e91bc5df17371ed0ba026334fe" kindref="member">ParaCamera::FirstPerson</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTransitionMode,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fRadius,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fAngle)</highlight></codeline>
<codeline lineno="2718"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/>((CAutoCamera*)(CGlobals::GetScene()-&gt;GetCurrentCamera()))-&gt;FollowBiped(NULL,<sp/>nTransitionMode,<sp/>CameraFollowFirstPerson,<sp/>fRadius,<sp/>fAngle,<sp/>0);</highlight></codeline>
<codeline lineno="2720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"></highlight></codeline>
<codeline lineno="2722"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_camera_1ac164f30db3c7ef382f635c89fa8a70b4" kindref="member">ParaCamera::ThirdPerson</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTransitionMode,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fRadius,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fFacing,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fAngle)</highlight></codeline>
<codeline lineno="2723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/>((CAutoCamera*)(CGlobals::GetScene()-&gt;GetCurrentCamera()))-&gt;FollowBiped(NULL,<sp/>nTransitionMode,<sp/>CameraFollowThirdPerson,<sp/>fRadius,<sp/>fFacing,<sp/>fAngle);</highlight></codeline>
<codeline lineno="2725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_camera_1a13842ab2b31519e7e61e2329688485b7" kindref="member">ParaCamera::Default</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTransitionMode,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fHeight,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fAngle)</highlight></codeline>
<codeline lineno="2727"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/>((CAutoCamera*)(CGlobals::GetScene()-&gt;GetCurrentCamera()))-&gt;FollowBiped(NULL,<sp/>nTransitionMode,<sp/>CameraFollowDefault,<sp/>fHeight,<sp/>fAngle,<sp/>0);</highlight></codeline>
<codeline lineno="2729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_camera_1a34150d36c238b27b615a64e7d94a114b" kindref="member">ParaCamera::Fixed</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTransitionMode,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fY,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fZ)</highlight></codeline>
<codeline lineno="2731"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/>((CAutoCamera*)(CGlobals::GetScene()-&gt;GetCurrentCamera()))-&gt;FollowBiped(NULL,<sp/>nTransitionMode,<sp/>CameraCameraFirstPerson,<sp/>fX,<sp/>fY,<sp/>fZ);</highlight></codeline>
<codeline lineno="2733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"></highlight></codeline>
<codeline lineno="2735"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_camera_1a0566cb51e4c591f14b03430366f7688c" kindref="member">ParaCamera::GetPosition</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>z)</highlight></codeline>
<codeline lineno="2736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector3<sp/>v;</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>CGlobals::GetScene()-&gt;GetCurrentCamera()-&gt;GetEyePosition();</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>v.x;*y<sp/>=<sp/>v.y;*z<sp/>=<sp/>v.z;</highlight></codeline>
<codeline lineno="2740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"></highlight></codeline>
<codeline lineno="2742"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_camera_1a44efdee96e1eae87d824451e2adbbc5f" kindref="member">ParaCamera::GetLookAtPosition</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>z)</highlight></codeline>
<codeline lineno="2743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector3<sp/>v;</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>CGlobals::GetScene()-&gt;GetCurrentCamera()-&gt;GetLookAtPosition();</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>v.x;*y<sp/>=<sp/>v.y;*z<sp/>=<sp/>v.z;</highlight></codeline>
<codeline lineno="2747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"></highlight></codeline>
<codeline lineno="2749"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_camera_1acbcdf4c75fbfacb477995ff265109588" kindref="member">ParaCamera::SetKeyMap</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scancode<sp/>)</highlight></codeline>
<codeline lineno="2750"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/>CGlobals::GetScene()-&gt;GetCurrentCamera()-&gt;SetKeyMap((CharacterAndCameraKeys)key,<sp/>(BYTE)scancode);</highlight></codeline>
<codeline lineno="2752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"></highlight></codeline>
<codeline lineno="2754"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_camera_1af9d752da410a8017197767c18a4a0dca" kindref="member">ParaCamera::GetKeyMap</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key<sp/>)</highlight></codeline>
<codeline lineno="2755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CGlobals::GetScene()-&gt;GetCurrentCamera()-&gt;GetKeyMap((CharacterAndCameraKeys)key);</highlight></codeline>
<codeline lineno="2757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"></highlight></codeline>
<codeline lineno="2760"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2761"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ParaMiniSceneGraph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2762"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="2764"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2765"><highlight class="normal">ParaMiniSceneGraph::~ParaMiniSceneGraph()</highlight></codeline>
<codeline lineno="2766"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"></highlight></codeline>
<codeline lineno="2770"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a9b3e15ffcdc10d3f14a05247733f5bfb" kindref="member">ParaMiniSceneGraph::EnableCamera</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bEnable<sp/>)</highlight></codeline>
<codeline lineno="2771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;EnableCamera(bEnable);</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"></highlight></codeline>
<codeline lineno="2778"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1af74f43ef288abe20f322b78b8dc34fcd" kindref="member">ParaMiniSceneGraph::IsCameraEnabled</ref>()</highlight></codeline>
<codeline lineno="2779"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pSceneGraph-&gt;IsCameraEnabled();</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"></highlight></codeline>
<codeline lineno="2787"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>ParaMiniSceneGraph::UpdateCameraParam(<sp/>float<sp/>lookat_x,<sp/>float<sp/>lookat_y,<sp/>float<sp/>lookat_z,<sp/>float<sp/>eyeat_x,<sp/>float<sp/>eyeat_y,<sp/>float<sp/>eyeat_z<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2788"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2789"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(IsValid())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2790"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2791"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;UpdateCameraParam(lookat_x,<sp/>lookat_y,<sp/>lookat_z,<sp/>eyeat_x,<sp/>eyeat_y,<sp/>eyeat_z);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2792"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2793"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2794"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2795"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>ParaMiniSceneGraph::GetCameraParam(<sp/>float*<sp/>lookat_x_,<sp/>float*<sp/>lookat_y_,<sp/>float*<sp/>lookat_z_,<sp/>float*<sp/>eyeat_x_,<sp/>float*<sp/>eyeat_y_,<sp/>float*<sp/>eyeat_z_<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2796"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(IsValid())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2798"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2799"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>lookat_x,<sp/>lookat_y,<sp/>lookat_z,<sp/>eyeat_x,<sp/>eyeat_y,<sp/>eyeat_z;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2800"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;GetCameraParam(&amp;lookat_x,<sp/>&amp;lookat_y,<sp/>&amp;lookat_z,<sp/>&amp;eyeat_x,<sp/>&amp;eyeat_y,<sp/>&amp;eyeat_z);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>*lookat_x_<sp/>=<sp/>lookat_x;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2802"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>*lookat_y_<sp/>=<sp/>lookat_y;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2803"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>*lookat_z_<sp/>=<sp/>lookat_z;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2804"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>*eyeat_x_<sp/>=<sp/>eyeat_x;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2805"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>*eyeat_y_<sp/>=<sp/>eyeat_y;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2806"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>*eyeat_z_<sp/>=<sp/>eyeat_z;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2808"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2809"><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><ref refid="class_para_scripting_1_1_para_object" kindref="compound">ParaScripting::ParaObject</ref><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a738745df65c3ff25ef86446889fc7850" kindref="member">ParaMiniSceneGraph::GetObject</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name<sp/>)</highlight></codeline>
<codeline lineno="2811"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>name!=0)</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(m_pSceneGraph-&gt;GetObject(name));</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(NULL);</highlight></codeline>
<codeline lineno="2817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a8b1d664315dda299b47075c63412cf9c" kindref="member">ParaMiniSceneGraph::DestroyObject</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name<sp/>)</highlight></codeline>
<codeline lineno="2820"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pSceneGraph-&gt;DestroyObject(name);</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"></highlight></codeline>
<codeline lineno="2828"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a9a4238fa386d0b0af3cecbda6289c115" kindref="member">ParaMiniSceneGraph::DestroyObject_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ParaObject&amp;<sp/>obj)</highlight></codeline>
<codeline lineno="2829"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>obj.m_pObj)</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pSceneGraph-&gt;DestroyObject(obj.get());</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"></highlight></codeline>
<codeline lineno="2837"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a259584f505d5a34bb82a4773160e3554" kindref="member">ParaMiniSceneGraph::Reset</ref>()</highlight></codeline>
<codeline lineno="2838"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;Reset();</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"></highlight></codeline>
<codeline lineno="2845"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1ab2404350929908cd65ef2849ab17716b" kindref="member">ParaMiniSceneGraph::AddChild</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ParaObject<sp/>obj<sp/>)</highlight></codeline>
<codeline lineno="2846"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>obj.IsValid())</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;AddChild(obj.get());</highlight></codeline>
<codeline lineno="2849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"></highlight></codeline>
<codeline lineno="2851"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a408406f4927c916e7431c9f0a47117a8" kindref="member">ParaMiniSceneGraph::GetName</ref>()</highlight></codeline>
<codeline lineno="2852"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pSceneGraph-&gt;GetName();</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"></highlight></codeline>
<codeline lineno="2858"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a207c5d4b5c92e43da2ff70ab65f4c697" kindref="member">ParaMiniSceneGraph::SetName</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sName<sp/>)</highlight></codeline>
<codeline lineno="2859"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;SetName(sName);</highlight></codeline>
<codeline lineno="2862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"></highlight></codeline>
<codeline lineno="2864"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a9aab04a6e2cf32449907930aceec4f37" kindref="member">ParaMiniSceneGraph::GetObject3</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>)</highlight></codeline>
<codeline lineno="2865"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(m_pSceneGraph-&gt;GetObject(x,y,z));</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(NULL);</highlight></codeline>
<codeline lineno="2871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"></highlight></codeline>
<codeline lineno="2873"><highlight class="normal">ParaObject<sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a04c3565c7b7dbef5ac47ff6260292449" kindref="member">ParaMiniSceneGraph::GetObject4</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fEpsilon)</highlight></codeline>
<codeline lineno="2874"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(m_pSceneGraph-&gt;GetObject(x,y,z,<sp/>fEpsilon));</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(NULL);</highlight></codeline>
<codeline lineno="2880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"></highlight></codeline>
<codeline lineno="2882"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1ab0263039ddb5331b338ffe2e1b1d7ba7" kindref="member">ParaMiniSceneGraph::RemoveObject</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name<sp/>)</highlight></codeline>
<codeline lineno="2883"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pSceneGraph-&gt;RemoveObject(name);</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"></highlight></codeline>
<codeline lineno="2891"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a629f6a3dc85ce68969e6c2a6630c255d" kindref="member">ParaMiniSceneGraph::RemoveObject_</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ParaObject&amp;<sp/>obj<sp/>)</highlight></codeline>
<codeline lineno="2892"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid()<sp/>&amp;&amp;<sp/>obj.m_pObj)</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pSceneGraph-&gt;RemoveObject(obj.get());</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2898"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"></highlight></codeline>
<codeline lineno="2900"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a95bc29e60876494b927cd9cf87269cdc" kindref="member">ParaMiniSceneGraph::IsVisible</ref>()</highlight></codeline>
<codeline lineno="2901"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pSceneGraph-&gt;IsVisible();</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2907"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"></highlight></codeline>
<codeline lineno="2909"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a31f450cc71e88d36316301cb54482355" kindref="member">ParaMiniSceneGraph::SetVisible</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bVisible<sp/>)</highlight></codeline>
<codeline lineno="2910"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;SetVisibility(bVisible);</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"></highlight></codeline>
<codeline lineno="2917"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1af518e57da08191dd00df7b80f350626c" kindref="member">ParaMiniSceneGraph::SetActor</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ParaObject<sp/>pActor<sp/>)</highlight></codeline>
<codeline lineno="2918"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;SetActor(pActor.get());</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2923"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"></highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><ref refid="class_para_scripting_1_1_para_object" kindref="compound">ParaScripting::ParaObject</ref><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a3676a9f296b44fbd6d725fe4d39e3244" kindref="member">ParaMiniSceneGraph::GetActor</ref>()</highlight></codeline>
<codeline lineno="2926"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_object" kindref="compound">ParaScripting::ParaObject</ref>(IsValid()?m_pSceneGraph-&gt;GetActor():NULL);</highlight></codeline>
<codeline lineno="2928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"></highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><ref refid="class_para_scripting_1_1_para_asset_object" kindref="compound">ParaScripting::ParaAssetObject</ref><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a85eed9ad6d2bdc54484f43b7fa1c0674" kindref="member">ParaMiniSceneGraph::GetTexture</ref>()</highlight></codeline>
<codeline lineno="2931"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_asset_object" kindref="compound">ParaScripting::ParaAssetObject</ref>(IsValid()?m_pSceneGraph-&gt;GetTexture():NULL);</highlight></codeline>
<codeline lineno="2933"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"></highlight></codeline>
<codeline lineno="2935"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a12c66fa6e334783422fc863ce563483f" kindref="member">ParaMiniSceneGraph::CameraZoom</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fAmount<sp/>)</highlight></codeline>
<codeline lineno="2936"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;CameraZoom(fAmount);</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2941"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"></highlight></codeline>
<codeline lineno="2943"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a26944591a268a2324460b2b8a55557f2" kindref="member">ParaMiniSceneGraph::CameraZoomSphere</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>center_x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>center_y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>center_z,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>raduis)</highlight></codeline>
<codeline lineno="2944"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;CameraZoomSphere(CShapeSphere(Vector3(center_x,center_y,center_z),<sp/>raduis));</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"></highlight></codeline>
<codeline lineno="2951"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1ad7dd788436837b5a825c46930a03aef0" kindref="member">ParaMiniSceneGraph::CameraRotate</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dz<sp/>)</highlight></codeline>
<codeline lineno="2952"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;CameraRotate(dx,<sp/>dy,<sp/>dz);</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2957"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"></highlight></codeline>
<codeline lineno="2959"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1aa9851a46411c28fb37780036a2c11d92" kindref="member">ParaMiniSceneGraph::CameraPan</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy<sp/>)</highlight></codeline>
<codeline lineno="2960"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;CameraPan(dx,<sp/>dy);</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"></highlight></codeline>
<codeline lineno="2967"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a502bcce63477e6a4c9d37f28faa53b05" kindref="member">ParaMiniSceneGraph::Draw</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fDeltaTime<sp/>)</highlight></codeline>
<codeline lineno="2968"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>SUCCEEDED(<sp/>CGlobals::GetRenderDevice()-&gt;BeginScene()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;Draw(fDeltaTime);</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"></highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGlobals::GetRenderDevice()-&gt;EndScene();</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"></highlight></codeline>
<codeline lineno="2980"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1ab08f2e60f078a323073a5f18f38f2cd8" kindref="member">ParaMiniSceneGraph::SaveToFile</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sFileName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nImageSize<sp/></highlight><highlight class="comment">/*=<sp/>0*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="2981"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;SaveToFile(sFileName,<sp/>nImageSize);</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"></highlight></codeline>
<codeline lineno="2988"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ParaMiniSceneGraph::SaveToFileEx(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sFileName,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/></highlight><highlight class="comment">/*=<sp/>0*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/></highlight><highlight class="comment">/*=<sp/>0*/</highlight><highlight class="normal">,<sp/>DWORD<sp/>dwFormat<sp/></highlight><highlight class="comment">/*=<sp/>3*/</highlight><highlight class="normal">,<sp/>UINT<sp/>MipLevels<sp/></highlight><highlight class="comment">/*=<sp/>0*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcLeft<sp/></highlight><highlight class="comment">/*=<sp/>0*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcTop<sp/></highlight><highlight class="comment">/*=<sp/>0*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcWidth<sp/></highlight><highlight class="comment">/*=<sp/>0*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcHeight<sp/></highlight><highlight class="comment">/*=<sp/>0*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2989"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsValid())</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;SaveToFile(sFileName,<sp/>width,<sp/>height,<sp/>dwFormat,<sp/>MipLevels,<sp/>srcLeft,<sp/>srcTop,<sp/>srcWidth,<sp/>srcHeight);</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2994"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"></highlight></codeline>
<codeline lineno="2996"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1aab5d8bfef9cad801b95c62e28ca8252d" kindref="member">ParaMiniSceneGraph::SetRenderTargetSize</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nHeight<sp/>)</highlight></codeline>
<codeline lineno="2997"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;SetRenderTargetSize(nWidth,<sp/>nHeight);</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3002"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"></highlight></codeline>
<codeline lineno="3004"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a87f232404af25cb899a57aed826491c3" kindref="member">ParaMiniSceneGraph::SetMaskTexture</ref>(<sp/>ParaAssetObject<sp/>pTexture<sp/>)</highlight></codeline>
<codeline lineno="3005"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;SetMaskTexture((TextureEntity*)pTexture.m_pAsset);</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3010"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"></highlight></codeline>
<codeline lineno="3012"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a8379f5e37a4745d97aa068e5a339e278" kindref="member">ParaMiniSceneGraph::EnableActiveRendering</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bEnable<sp/>)</highlight></codeline>
<codeline lineno="3013"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;EnableActiveRendering(bEnable);</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"></highlight></codeline>
<codeline lineno="3020"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1aede837786768d480f6ff1fdb9869c9a1" kindref="member">ParaMiniSceneGraph::IsActiveRenderingEnabled</ref>()</highlight></codeline>
<codeline lineno="3021"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(IsValid()?m_pSceneGraph-&gt;IsActiveRenderingEnabled():</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"></highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><ref refid="class_para_scripting_1_1_para_object" kindref="compound">ParaScripting::ParaObject</ref><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1af4c2613446af60dc9ac2479e983e334e" kindref="member">ParaMiniSceneGraph::MousePick</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fMaxDistance,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sFilterFunc<sp/>)</highlight></codeline>
<codeline lineno="3026"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/>CBaseObject*<sp/>pObj=NULL;</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/>OBJECT_FILTER_CALLBACK<sp/>pFilterFunc<sp/>=<sp/>GetFilterFuncByName(sFilterFunc);</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"></highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;PickObject((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)x,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)y,<sp/>&amp;pObj,<sp/>fMaxDistance,<sp/>pFilterFunc);</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaObject(pObj);</highlight></codeline>
<codeline lineno="3036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"></highlight></codeline>
<codeline lineno="3038"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1afd654d77fe1af5a55cff5952332e9c43" kindref="member">ParaMiniSceneGraph::CameraSetLookAtPos</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>)</highlight></codeline>
<codeline lineno="3039"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;CameraSetLookAtPos(x,y,z);</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"></highlight></codeline>
<codeline lineno="3046"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ParaMiniSceneGraph::CameraGetLookAtPos(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>z<sp/>)</highlight></codeline>
<codeline lineno="3047"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;CameraGetLookAtPos(x,y,z);</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3052"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"></highlight></codeline>
<codeline lineno="3054"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1ac6890f5fd75b6622e0b9cffa0c9cd7c1" kindref="member">ParaMiniSceneGraph::CameraSetEyePosByAngle</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fRotY,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fLiftupAngle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fCameraObjectDist<sp/>)</highlight></codeline>
<codeline lineno="3055"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;CameraSetEyePosByAngle(fRotY,fLiftupAngle,<sp/>fCameraObjectDist);</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"></highlight></codeline>
<codeline lineno="3062"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ParaMiniSceneGraph::CameraGetEyePosByAngle(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>fRotY,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>fLiftupAngle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>fCameraObjectDist<sp/>)</highlight></codeline>
<codeline lineno="3063"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;CameraGetEyePosByAngle(fRotY,fLiftupAngle,<sp/>fCameraObjectDist);</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"></highlight></codeline>
<codeline lineno="3070"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ParaMiniSceneGraph::CameraSetEyePos(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="3071"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;CameraSetEyePos(x,y,z);</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3076"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"></highlight></codeline>
<codeline lineno="3078"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ParaMiniSceneGraph::CameraGetEyePos(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>z)</highlight></codeline>
<codeline lineno="3079"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;CameraGetEyePos(x,y,z);</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"></highlight></codeline>
<codeline lineno="3086"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a40f11c9a9f307d8ad2882cdafb05fc46" kindref="member">ParaMiniSceneGraph::ShowHeadOnDisplay</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bShow<sp/>)</highlight></codeline>
<codeline lineno="3087"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;ShowHeadOnDisplay(bShow);</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3092"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"></highlight></codeline>
<codeline lineno="3094"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a39943ed1f853fbc2e2fca8bf3067d26b" kindref="member">ParaMiniSceneGraph::IsHeadOnDisplayShown</ref>()</highlight></codeline>
<codeline lineno="3095"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pSceneGraph-&gt;IsHeadOnDisplayShown();</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"></highlight></codeline>
<codeline lineno="3103"><highlight class="normal">ParaAttributeObject<sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1aef5680e551e202eb2c9b48091fc9af6e" kindref="member">ParaMiniSceneGraph::GetAttributeObject</ref>()</highlight></codeline>
<codeline lineno="3104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaAttributeObject(m_pSceneGraph);</highlight></codeline>
<codeline lineno="3106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"></highlight></codeline>
<codeline lineno="3108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1acbb28404d1db686eb593f699460015e4" kindref="member">ParaMiniSceneGraph::GetAttributeObject_</ref>(ParaAttributeObject&amp;<sp/>output)</highlight></codeline>
<codeline lineno="3109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>GetAttributeObject();</highlight></codeline>
<codeline lineno="3111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"></highlight></codeline>
<codeline lineno="3113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a4b4b7c21172ca70072e7581e5412bb3e" kindref="member">ParaMiniSceneGraph::EnableLighting</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bEnable)</highlight></codeline>
<codeline lineno="3114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;EnableLight(bEnable);</highlight></codeline>
<codeline lineno="3117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"></highlight></codeline>
<codeline lineno="3119"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParaMiniSceneGraph::IsLightingEnabled()</highlight></codeline>
<codeline lineno="3120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IsValid()<sp/>?<sp/>m_pSceneGraph-&gt;IsLightEnabled()<sp/>:<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"></highlight></codeline>
<codeline lineno="3124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a5619544b0b721bd43e95ad46d24d4a29" kindref="member">ParaMiniSceneGraph::SetFog</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bRenderFog,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strFogColor,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fFogStart,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fFogEnd,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fFogDensity)</highlight></codeline>
<codeline lineno="3125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!IsValid())</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bRenderFog)</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;EnableFog(bRenderFog);</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"></highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinearColor<sp/>colorFog;</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sscanf(strFogColor,<sp/></highlight><highlight class="stringliteral">&quot;%f<sp/>%f<sp/>%f&quot;</highlight><highlight class="normal">,<sp/>&amp;colorFog.r,&amp;colorFog.g,&amp;colorFog.b)&lt;3)</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorFog<sp/>=<sp/>LinearColor(1,1,1,1);</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"></highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;SetFogColor(colorFog);</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;SetFogStart(fFogStart);</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;SetFogEnd(fFogEnd);</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;SetFogDensity(fFogDensity);</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"></highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;EnableFog(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"></highlight></codeline>
<codeline lineno="3148"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a3a261e4d8ce05b05aa8594a9a9c8e46b" kindref="member">ParaMiniSceneGraph::CreateSkyBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strObjectName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strMeshAssetName,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fScaleX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fScaleY,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fScaleZ,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fHeightOffset)</highlight></codeline>
<codeline lineno="3149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!IsValid())</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/>MeshEntity*<sp/>pMesh<sp/>=<sp/><sp/>CGlobals::GetAssetManager()-&gt;GetMesh(strMeshAssetName);</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/>ParaAssetObject<sp/>obj(pMesh);</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreateSkyBox_(strObjectName,<sp/>obj,<sp/>fScaleX,<sp/>fScaleY,<sp/>fScaleZ,<sp/>fHeightOffset);<sp/></highlight></codeline>
<codeline lineno="3155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParaMiniSceneGraph::CreateSkyBox_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strObjectName,<sp/>ParaAssetObject&amp;<sp/>asset,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fScaleX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fScaleY,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fScaleZ,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fHeightOffset)</highlight></codeline>
<codeline lineno="3157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!IsValid())</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(asset.IsValid())</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pSceneGraph-&gt;CreateSkyBox(strObjectName,<sp/>*(asset.m_pAsset),<sp/>fScaleX,<sp/>fScaleY,<sp/>fScaleZ,<sp/>fHeightOffset);<sp/></highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"></highlight></codeline>
<codeline lineno="3166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1ad16c663d06cca6611111466156b9df83" kindref="member">ParaMiniSceneGraph::DeleteSkyBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strObjectName)</highlight></codeline>
<codeline lineno="3167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;DeleteSkyBox(strObjectName);</highlight></codeline>
<codeline lineno="3170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"></highlight></codeline>
<codeline lineno="3172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1ada498b8cd65a43aa523706811de0933b" kindref="member">ParaMiniSceneGraph::SetTimeOfDaySTD</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>time)</highlight></codeline>
<codeline lineno="3173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;GetSunLight().SetTimeOfDaySTD(time);</highlight></codeline>
<codeline lineno="3176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"></highlight></codeline>
<codeline lineno="3178"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1adcae918e441d8da6b14eda29d208591c" kindref="member">ParaMiniSceneGraph::GetTimeOfDaySTD</ref>()</highlight></codeline>
<codeline lineno="3179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IsValid()<sp/>?<sp/>m_pSceneGraph-&gt;GetSunLight().GetTimeOfDaySTD()<sp/>:<sp/>0.f;</highlight></codeline>
<codeline lineno="3181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"></highlight></codeline>
<codeline lineno="3183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a0b5c87e28f1155ff26d3a9e677041192" kindref="member">ParaMiniSceneGraph::SetBackGroundColor</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>rgba<sp/>)</highlight></codeline>
<codeline lineno="3184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r=255,g=255,b=255,a=255;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCount<sp/>=<sp/>sscanf(rgba,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%d<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>&amp;r,&amp;g,&amp;b,&amp;a);</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/>LinearColor<sp/>color<sp/>=<sp/>COLOR_ARGB(a,r,g,b);</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"></highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;SetBackGroundColor(color);</highlight></codeline>
<codeline lineno="3191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"></highlight></codeline>
<codeline lineno="3193"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1ad22eaea3bd58f08a3c421c78eb440b69" kindref="member">ParaMiniSceneGraph::DestroyChildren</ref>()</highlight></codeline>
<codeline lineno="3194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsValid())</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSceneGraph-&gt;DestroyChildren();</highlight></codeline>
<codeline lineno="3197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"></highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><ref refid="class_para_scripting_1_1_para_attribute_object" kindref="compound">ParaScripting::ParaAttributeObject</ref><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1aa80c3684aa67862f43bea198705a5355" kindref="member">ParaMiniSceneGraph::GetAttributeObjectCamera</ref>()</highlight></codeline>
<codeline lineno="3200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaAttributeObject(IsValid()<sp/>?<sp/>m_pSceneGraph-&gt;GetCamera()<sp/>:<sp/>NULL);</highlight></codeline>
<codeline lineno="3202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"></highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><ref refid="class_para_scripting_1_1_para_attribute_object" kindref="compound">ParaScripting::ParaAttributeObject</ref><sp/><ref refid="class_para_scripting_1_1_para_mini_scene_graph_1a8532bc967096cb3eb813ab8f8aef7c85" kindref="member">ParaMiniSceneGraph::GetAttributeObject1</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name)</highlight></codeline>
<codeline lineno="3205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsValid())</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/>NULL<sp/>||<sp/>name[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaAttributeObject(m_pSceneGraph);</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(name,<sp/></highlight><highlight class="stringliteral">&quot;camera&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaAttributeObject(m_pSceneGraph-&gt;GetCamera());</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(name,<sp/></highlight><highlight class="stringliteral">&quot;sky&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaAttributeObject(m_pSceneGraph-&gt;GetCurrentSky());</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(name,<sp/></highlight><highlight class="stringliteral">&quot;sun&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaAttributeObject(&amp;(m_pSceneGraph-&gt;GetSunLight()));</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaAttributeObject();</highlight></codeline>
<codeline lineno="3226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"></highlight></codeline>
<codeline lineno="3228"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>ParaScripting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3229"><highlight class="normal"></highlight></codeline>
<codeline lineno="3230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>LuaJit,<sp/>only<sp/>for<sp/>function<sp/>that<sp/>maybe<sp/>called<sp/>millions<sp/>of<sp/>time<sp/>per<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3231"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/>PE_CORE_DECL<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ParaScene_CheckExist(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nID)</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ParaScripting::ParaScene::CheckExist(nID);</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3236"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="ParaScriptBindings/ParaScriptingScene.cpp"/>
  </compounddef>
</doxygen>
